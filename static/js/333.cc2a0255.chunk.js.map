{"version":3,"file":"static/js/333.cc2a0255.chunk.js","mappings":"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","sources":["components/Auth/LoginForm/LoginForm.styled.js","components/Auth/AuthField/AuthField.styled.js","components/Auth/AuthField/AuthField.jsx","components/Auth/LoginForm/ForgotPassword/ForgotPasswordModal.styled.js","components/Auth/LoginForm/ForgotPassword/ForgotPasswordModal.jsx","components/Auth/LoginForm/ForgotPassword/ForgotPasswordLink.styled.js","components/Auth/LoginForm/ForgotPassword/ForgotPasswordLink.jsx","components/Auth/LoginForm/LoginForm.jsx","components/Auth/RegisterForm/RegisterForm.styled.js","components/Auth/RegisterForm/RegisterForm.jsx","pages/RegisterPage.styled.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const StyledForm = styled.form`\n  position: relative;\n  box-sizing: border-box;\n  width: 100%;\n  min-height: 346px;\n  margin: auto 20px;\n  padding: 40px 20px;\n  display: flex;\n  flex-direction: column;\n  background-color: ${({ theme }) => theme.colors.white};\n  border-radius: 8px;\n  font-family: Inter, -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto',\n    'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.s}) {\n    width: 335px;\n  }\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.m}) {\n    width: 480px;\n    min-height: 424px;\n    padding: 40px;\n  }\n`;\n\nexport const HeadingWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 8px;\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.m}) {\n    margin-bottom: 22px;\n  }\n`;\n\nexport const StyledHomeBtn = styled(Link)`\n  padding: 10px 15px;\n  background-color: ${({ theme }) => theme.colors.accent};\n  color: ${({ theme }) => theme.colors.white};\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 18px;\n  letter-spacing: -0.02em;\n  box-shadow: ${({ theme }) => theme.shadows.authButton};\n  border-radius: 16px;\n  border-width: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n\n  :hover {\n    background-color: ${({ theme }) => theme.colors.hovered};\n  }\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.m}) {\n    font-size: 18px;\n    line-height: 24px;\n  }\n`;\n\nexport const StyledHeading = styled.h2`\n  color: ${({ theme }) => theme.colors.accent};\n  font-size: 18px;\n  line-height: 24px;\n  font-weight: 600;\n  text-shadow: ${({ theme }) => theme.shadows.authHeading};\n  text-align: start;\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.m}) {\n    font-size: 24px;\n  }\n`;\n","import styled from '@emotion/styled';\n// check main font size and line height and delete doubling\n\nexport const Wrapper = styled.div`\n  position: relative;\n`;\n\nexport const InputContainer = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledLabel = styled.label`\n  margin-top: 24px;\n  color: ${({ valid, theme }) => {\n    switch (valid) {\n      case true:\n        return theme.colors.saccess;\n      case false:\n        return theme.colors.failed;\n      default:\n        return theme.colors.textCancelBtnIntodo;\n    }\n  }};\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 15px;\n  text-align: start;\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.m}) {\n    margin-top: 18px;\n    font-size: 14px;\n    line-height: 17px;\n  }\n`;\n\nexport const StyledInput = styled.input`\n  width: 100%;\n  box-sizing: border-box;\n  height: 46px;\n  padding: 14px;\n  margin-top: 8px;\n  background-color: ${({ theme }) => theme.colors.white};\n  color: ${({ theme }) => theme.colors.textCancelBtnIntodo};\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 18px;\n  border: 1px solid;\n  border-color: ${({ valid, theme }) => {\n    switch (valid) {\n      case true:\n        return theme.colors.saccess;\n      case false:\n        return theme.colors.failed;\n      default:\n        return theme.colors.borderDefaultColor;\n    }\n  }};\n  border-radius: 8px;\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.placegolderAuth};\n  }\n  :focus {\n    border: 1px solid ${({ theme }) => theme.colors.textCancelBtnIntodo};\n  }\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.m}) {\n    height: 54px;\n    padding: 18px;\n    font-size: 16px;\n    line-height: 18px;\n  }\n`;\n\nexport const StyledIcon = styled.div`\n  width: 20px;\n  height: 20px;\n  margin-right: 12px;\n  position: absolute;\n  bottom: 13px;\n  right: 0;\n`;\n\nexport const StyledInputNotification = styled.p`\n  margin: 0;\n  padding: 0 18px;\n  font-size: 12px;\n  line-height: 14px;\n  color: ${({ valid, theme }) => {\n    switch (valid) {\n      case true:\n        return theme.colors.saccess;\n      case false:\n        return theme.colors.failed;\n      default:\n        return 'transparant';\n    }\n  }};\n`;\n\nexport const InputWrapper = styled.div`\n  position: relative;\n`;\n\nexport const PasswordBtn = styled.button`\n  position: absolute;\n  top: 60%;\n  right: 10px;\n  transform: translateY(-50%);\n`;\n","import {\n  Wrapper,\n  StyledInput,\n  StyledLabel,\n  StyledIcon,\n  InputContainer,\n  StyledInputNotification,\n  InputWrapper,\n  PasswordBtn,\n} from './AuthField.styled';\nimport { BiErrorCircle, BiCheckCircle } from 'react-icons/bi';\nimport PropTypes from 'prop-types';\nimport { useTheme } from '@emotion/react';\nimport { useEffect, useRef, useState } from 'react';\nimport { AiOutlineEye, AiOutlineEyeInvisible } from 'react-icons/ai';\n\nexport const AuthField = ({\n  valid,\n  onChange,\n  value,\n  name,\n  type,\n  placeholder,\n  errorMessage,\n  lableName,\n}) => {\n  const themeColors = useTheme().colors;\n\n  const passwordInputRef = useRef(null);\n  const [visible, setVisible] = useState(false);\n\n  const toggleBtn = e => {\n    e.preventDefault();\n    setVisible(prevState => !prevState);\n  };\n\n  useEffect(() => {\n    if (passwordInputRef.current) {\n      passwordInputRef.current.type = visible ? 'text' : 'password';\n    }\n  }, [visible]);\n\n  return (\n    <Wrapper>\n      <InputContainer>\n        <StyledLabel htmlFor={name.toLowerCase()} valid={valid}>\n          {lableName}\n        </StyledLabel>\n        <InputWrapper>\n          <StyledInput\n            id={name.toLowerCase()}\n            name={name.toLowerCase()}\n            lableName={lableName}\n            type={type}\n            onChange={onChange}\n            value={value}\n            placeholder={placeholder}\n            valid={valid}\n            ref={type === 'password' ? passwordInputRef : null}\n          />\n          {type === 'password' && (\n            <PasswordBtn onClick={toggleBtn}>\n              {visible ? (\n                <AiOutlineEye size={17} />\n              ) : (\n                <AiOutlineEyeInvisible size={17} />\n              )}\n            </PasswordBtn>\n          )}\n        </InputWrapper>\n        {valid === false && (\n          <StyledIcon>\n            <BiErrorCircle color={themeColors.failed} size={20} />\n          </StyledIcon>\n        )}\n        {valid && (\n          <StyledIcon>\n            <BiCheckCircle color={themeColors.saccess} size={20} />\n          </StyledIcon>\n        )}\n      </InputContainer>\n      {valid === false && (\n        <StyledInputNotification valid={valid}>\n          {errorMessage}\n        </StyledInputNotification>\n      )}\n    </Wrapper>\n  );\n};\n\nAuthField.propTypes = {\n  valid: PropTypes.oneOf([true, false, null]),\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  lableName: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(['text', 'email', 'password']).isRequired,\n  placeholder: PropTypes.string.isRequired,\n  errorMessage: PropTypes.string,\n};\n","import styled from '@emotion/styled';\n\nexport const ForgotPasswordModalContainer = styled.div`\n  display: flex;\n  background-color: ${({ theme }) => theme.colors.white};\n  width: 100%;\n  height: 100%;\n  flex-direction: column;\n  align-items: center;\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.m}) {\n    padding-top: 30px;\n  }\n`;\n\nexport const ForgotHeading = styled.h2`\n  margin-bottom: 24px;\n  color: ${({ theme }) => theme.colors.accent};\n  font-size: 18px;\n  line-height: 24px;\n  font-weight: 600;\n  text-align: start;\n`;\n\nexport const ForgotForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  background-color: ${({ theme }) => theme.colors.white};\n  border-radius: 8px;\n`;\n","import { Formik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\n\nimport {\n  ForgotPasswordModalContainer,\n  ForgotHeading,\n  ForgotForm,\n} from './ForgotPasswordModal.styled';\nimport { StyledInput } from '../../AuthField/AuthField.styled';\nimport { getNewPassword } from 'redux/auth/operations';\nimport CreateModal from 'utils/Modal/Modal';\nimport { getPasswordSchema, notification, useNotification } from 'helpers';\nimport { selectIsRefreshingUser } from 'redux/auth/selectors';\nimport { LoaderMini } from 'utils/Loader';\nimport { MainBtn } from '../../../../utils/Buttons/MainButton.styled';\n\nconst ForgotPasswordModal = ({ show, onClose }) => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const isRefreshing = useSelector(selectIsRefreshingUser);\n\n  const toast = useNotification();\n\n  const handleSubmit = async (values, { resetForm }) => {\n    try {\n      const { payload } = await dispatch(getNewPassword(values.email));\n\n      if (payload.status === 201) {\n        notification(\n          toast,\n          'success',\n          t(`notifications.New password`),\n          onClose()\n        );\n        values.notification = 'Please check your email';\n        resetForm();\n      } else {\n        notification(toast, 'fail', t(`notifications.Not found`));\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      notification(toast, 'fail', 'Something is wrong. Try a later');\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        email: '',\n        notification: '',\n      }}\n      validationSchema={getPasswordSchema(\n        t(`validation.Email must have @ and be valid`),\n        t(`validation.Email is a required field`)\n      )}\n      onSubmit={handleSubmit}\n    >\n      {({ values, handleSubmit, handleChange, errors, touched }) => (\n        <CreateModal\n          background=\"#FFFFFF\"\n          color=\"#111111\"\n          show={show}\n          onClose={onClose}\n          style={{ width: '480px', height: '424px' }}\n        >\n          <ForgotPasswordModalContainer>\n            <ForgotHeading>\n              {t(`sign.Confirm your email address`)}\n            </ForgotHeading>\n            {isRefreshing && <LoaderMini />}\n            {!isRefreshing && (\n              <ForgotForm onSubmit={handleSubmit}>\n                <StyledInput\n                  name=\"email\"\n                  placeholder={t(`sign.Enter email`)}\n                  value={values.email}\n                  type=\"email\"\n                  onChange={handleChange}\n                />\n                {errors.email && touched.email && <div>{errors.email}</div>}\n                <MainBtn style={{ width: '70%', marginTop: 40 }}>\n                  {t(`sign.Remind password`)}\n                </MainBtn>\n              </ForgotForm>\n            )}\n          </ForgotPasswordModalContainer>\n        </CreateModal>\n      )}\n    </Formik>\n  );\n};\n\nexport default ForgotPasswordModal;\n","import styled from '@emotion/styled';\n\nexport const ForgotButtonLink = styled.button`\n  height: 100%;\n  width: auto;\n\n  color: ${({ theme }) => theme.colors.accent};\n  font-weight: 600;\n  font-family: inherit;\n  font-size: 14px;\n  line-height: 18px;\n  border-radius: 4px;\n  border-width: 0;\n  padding-top: 20px;\n  cursor: pointer;\n\n  transition: transform 0.3s;\n\n  &:hover {\n    transform: scale(1.1);\n    text-decoration: underline;\n    color: #2b78ef;\n  }\n`;\n","import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport ForgotPasswordModal from './ForgotPasswordModal';\nimport { ForgotButtonLink } from './ForgotPasswordLink.styled';\n\nexport const ForgotPasswordLink = () => {\n  const { t } = useTranslation();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <>\n      <ForgotButtonLink\n        type=\"button\"\n        onClick={openModal}\n        style={{ marginTop: '10px' }}\n      >\n        {t(`sign.Forgot your password`)}\n      </ForgotButtonLink>\n      {isModalOpen && <ForgotPasswordModal onClose={closeModal} />}\n    </>\n  );\n};\n","import { Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\n\nimport {\n  HeadingWrapper,\n  StyledForm,\n  StyledHeading,\n  StyledHomeBtn,\n} from './LoginForm.styled';\nimport { AuthField } from '../AuthField/AuthField';\n\nimport { logIn } from '../../../redux/auth/operations';\nimport { loginSchema, notification, useNotification } from 'helpers';\nimport { MainBtn } from '../../../utils/Buttons/MainButton.styled';\nimport { CgLogIn } from 'react-icons/cg';\nimport { AiOutlineLeftCircle } from 'react-icons/ai';\nimport { ForgotPasswordLink } from './ForgotPassword/ForgotPasswordLink'; // Імпортуємо компонент ForgotPasswordLink\n\nexport const LoginForm = () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  const toast = useNotification();\n\n  const onSubmitForm = async (values, { resetForm }) => {\n    try {\n      const { payload } = await dispatch(logIn(values));\n      if (\n        payload === 'Request failed with status code 400' ||\n        payload === 'Request failed with status code 401'\n      ) {\n        notification(toast, 'fail', t(`notifications.Incorrect`));\n        return;\n      } else if (payload === 'Request failed with status code 403') {\n        notification(toast, 'fail', t(`notifications.Verify`));\n        return;\n      } else if (payload === 'Request failed with status code 404') {\n        notification(toast, 'fail', t(`notifications.User not found`));\n        return;\n      }\n      resetForm();\n    } catch (err) {\n      console.log('Error===>', err);\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        email: '',\n        password: '',\n      }}\n      validationSchema={loginSchema(\n        t(`validation.Email must have @ and be valid`),\n        t(`validation.Email is a required field`),\n        t(`validation.Password is a required field`)\n      )}\n      validateOnBlur={false}\n      validateOnChange={false}\n      onSubmit={onSubmitForm}\n    >\n      {({ values, handleSubmit, handleBlur, handleChange }) => (\n        <StyledForm onSubmit={handleSubmit}>\n          <HeadingWrapper>\n            <StyledHeading>{t(`sign.Log In`)}</StyledHeading>\n            <StyledHomeBtn to=\"/\">\n              {t(`sign.Home`)}\n              <AiOutlineLeftCircle\n                style={{\n                  marginLeft: 6,\n                }}\n              />\n            </StyledHomeBtn>\n          </HeadingWrapper>\n          <AuthField\n            name={'Email'}\n            lableName={t(`sign.Email`)}\n            value={values.email}\n            type={'email'}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            placeholder={t(`sign.Enter email`)}\n          />\n          <AuthField\n            name={'Password'}\n            lableName={t(`sign.Password`)}\n            value={values.password}\n            type={'password'}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            placeholder={t(`sign.Enter password`)}\n          />\n          <MainBtn style={{ width: '100%', marginTop: '32px' }} type=\"submit\">\n            {t(`sign.Log In`)}\n            <CgLogIn style={{ marginLeft: 11, width: 18, height: 18 }} />\n          </MainBtn>\n          <ForgotPasswordLink />\n        </StyledForm>\n      )}\n    </Formik>\n  );\n};\n","import styled from '@emotion/styled';\n\n// check main font size and line height and delete doubling\n// check using font family\n\nexport const StyledForm = styled.form`\n  position: relative;\n  box-sizing: border-box;\n  width: 100%;\n  min-height: 469px;\n  margin: auto 20px;\n  padding: 40px 20px;\n  display: flex;\n  flex-direction: column;\n  background-color: ${({ theme }) => theme.colors.white};\n  border-radius: 8px;\n  font-family: Inter, -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto',\n    'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.s}) {\n    width: 335px;\n  }\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.m}) {\n    width: 480px;\n    min-height: 521px;\n    padding: 40px;\n  }\n`;\n\nexport const StyledHeading = styled.h2`\n  color: ${({ theme }) => theme.colors.accent};\n  font-size: 18px;\n  line-height: 24px;\n  font-weight: 600;\n  text-shadow: ${({ theme }) => theme.shadows.authHeading};\n  text-align: start;\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.m}) {\n    font-size: 24px;\n  }\n`;\n\nexport const StyledInput = styled.div`\n  position: static;\n`;\n\nexport const StyledErrorMessage = styled.div`\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 1.17;\n  color: #da1414;\n  display: flex;\n  flex-direction: column;\n\n  //position: absolute;\n  //margin-top: -12px;\n  //margin-left: auto;\n  //margin-right: auto;\n  //padding-left: 18px;\n  //overflow: hidden;\n  //color: #DA1414;\n  //border: 0.15em solid #DA1414; => input\n  //white-space: nowrap;\n  //letter-spacing: 0.08em;\n  //\n  //@media screen and (min-width: 768px) {\n  //  margin-top: -16px;\n  //}\n  //\n  //@media screen and (min-width: 1440px) {\n  //  margin-top: -19px;\n  //}\n`;\n","import { Formik, ErrorMessage } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\n\nimport {\n  StyledErrorMessage,\n  StyledForm,\n  StyledHeading,\n} from './RegisterForm.styled';\nimport { AuthField } from '../AuthField/AuthField';\nimport { register } from '../../../redux/auth/operations';\nimport { notification, registerSchema, useNotification } from 'helpers';\nimport { MainBtn } from '../../../utils/Buttons/MainButton.styled';\nimport { CgLogIn } from 'react-icons/cg';\nimport { HeadingWrapper, StyledHomeBtn } from '../LoginForm/LoginForm.styled';\nimport { AiOutlineLeftCircle } from 'react-icons/ai';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const toast = useNotification();\n\n  const onSubmitForm = async (values, { resetForm }) => {\n    try {\n      const { payload } = await dispatch(register(values));\n      if (payload !== {} || typeof payload !== 'string') {\n        notification(toast, 'info', t(`notifications.Approve`));\n        navigate('/login');\n        resetForm();\n      }\n      if (typeof payload === 'string') {\n        notification(toast, 'fail', t(`notifications.Already exists`));\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        username: '',\n        email: '',\n        password: '',\n      }}\n      validationSchema={registerSchema(\n        t(`validation.Required`),\n        t(`validation.Name must be 3 characters or more`),\n        t(`validation.Name must be 16 characters or less`),\n        t(`validation.Name must contain only Latin or Cyrillic characters`),\n        t(`validation.Email must have @ and be valid`),\n        t(`validation.Email is a required field`),\n        t(`validation.Password must contain`),\n        t(`validation.Password is a required field`)\n      )}\n      validateOnBlur={false}\n      validateOnChange={false}\n      onSubmit={onSubmitForm}\n    >\n      {({ values, handleSubmit, handleBlur, handleChange }) => (\n        <StyledForm onSubmit={handleSubmit}>\n          <HeadingWrapper>\n            <StyledHeading>{t(`sign.Sign Up`)}</StyledHeading>\n            <StyledHomeBtn to=\"/\">\n              {t(`sign.Home`)}\n              <AiOutlineLeftCircle\n                style={{\n                  marginLeft: 6,\n                }}\n              />\n            </StyledHomeBtn>\n          </HeadingWrapper>\n          <AuthField\n            name={'username'}\n            lableName={t(`sign.Name`)}\n            value={values.username}\n            type={'text'}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            placeholder={t(`sign.Enter your name`)}\n          />\n          <ErrorMessage component={StyledErrorMessage} name=\"username\" />\n\n          <AuthField\n            name={'Email'}\n            lableName={t(`sign.Email`)}\n            value={values.email}\n            type={'email'}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            placeholder={t(`sign.Enter email`)}\n          />\n          <ErrorMessage component={StyledErrorMessage} name=\"email\" />\n\n          <AuthField\n            name={'Password'}\n            lableName={t(`sign.Password`)}\n            value={values.password}\n            type={'password'}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            placeholder={t(`sign.Enter password`)}\n          />\n          <ErrorMessage component={StyledErrorMessage} name=\"password\" />\n\n          <MainBtn style={{ width: '100%', marginTop: '32px' }} type=\"submit\">\n            {t(`sign.Sign Up`)}\n            <CgLogIn style={{ marginLeft: 11, width: 18, height: 18 }} />\n          </MainBtn>\n        </StyledForm>\n      )}\n    </Formik>\n  );\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport { themes } from 'styles/themes';\nimport { device } from '../styles/mediaVeriables';\nexport const RegisterPageContainer = styled.div`\n  background-color: ${themes.colors.backgroundAuth};\n  min-height: 100vh;\n  width: 100%;\n  padding: 20px 0;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const RegisterPageWrap = styled.div`\n  text-align: center;\n`;\nexport const StyledNavLink = styled(Link)`\n  display: block;\n  margin-top: ${themes.fontSizes.l};\n  color: ${themes.colors.accent};\n  font-weight: ${themes.fontWeight.sb};\n  font-size: ${themes.fontSizes.xs};\n  line-height: 1.17;\n  text-decoration-line: underline;\n  cursor: pointer;\n  text-shadow: 0px 47px 355px rgba(0, 0, 0, 0.07),\n    0px 9.4px 57.6875px rgba(0, 0, 0, 0.035);\n\n  @media ${device.tablet} {\n    font-size: 18px;\n    line-height: 1.33;\n    margin-top: ${themes.fontSizes.xxl};\n  }\n\n  :hover {\n    color: #2c66bc;\n  }\n`;\n\nexport const NavWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n  align-items: center;\n`;\n\nexport const Img = styled.img`\n  display: none;\n\n  @media ${device.desktop} {\n    display: block;\n    width: 400px;\n    height: 416px;\n    position: absolute;\n    left: 49px;\n    bottom: 0;\n  }\n`;\n"],"names":["StyledForm","styled","theme","colors","white","breakpoints","s","m","HeadingWrapper","StyledHomeBtn","Link","accent","shadows","authButton","hovered","StyledHeading","authHeading","Wrapper","InputContainer","StyledLabel","valid","saccess","failed","textCancelBtnIntodo","StyledInput","borderDefaultColor","placegolderAuth","StyledIcon","StyledInputNotification","InputWrapper","PasswordBtn","AuthField","onChange","value","name","type","placeholder","errorMessage","lableName","themeColors","useTheme","passwordInputRef","useRef","useState","visible","setVisible","useEffect","current","htmlFor","toLowerCase","id","ref","onClick","e","preventDefault","prevState","size","color","ForgotPasswordModalContainer","ForgotHeading","ForgotForm","show","onClose","t","useTranslation","dispatch","useDispatch","isRefreshing","useSelector","selectIsRefreshingUser","toast","useNotification","handleSubmit","values","resetForm","getNewPassword","email","payload","status","notification","console","error","initialValues","validationSchema","getPasswordSchema","onSubmit","handleChange","errors","touched","background","style","width","height","Loader","L","marginTop","ForgotButtonLink","ForgotPasswordLink","isModalOpen","setIsModalOpen","LoginForm","onSubmitForm","logIn","log","password","loginSchema","validateOnBlur","validateOnChange","handleBlur","to","marginLeft","onBlur","StyledErrorMessage","RegisterForm","navigate","useNavigate","register","username","registerSchema","component","RegisterPageContainer","themes","RegisterPageWrap","StyledNavLink","device","NavWrap","Img"],"sourceRoot":""}