{"version":3,"file":"static/js/647.ebf28845.chunk.js","mappings":"kLAAO,IACMA,EAAa,SAAAC,GAAK,oBAAIA,QAAJ,IAAIA,GAAJ,UAAIA,EAAOC,YAAX,aAAI,EAAaC,IAAjB,EAElBC,EAAwB,SAAAH,GAAK,oBAAIA,QAAJ,IAAIA,GAAJ,UAAIA,EAAOC,YAAX,aAAI,EAAaG,SAAjB,C,wGCD7BC,EAAkB,SAAAL,GAAK,oBAAGA,QAAH,IAAGA,GAAH,UAAGA,EAAOM,eAAV,aAAG,EAAgBF,SAAnB,ECDvBG,EAAuB,SAAAP,GAAK,oBAAGA,QAAH,IAAGA,GAAH,UAAGA,EAAOQ,aAAV,aAAG,EAAcJ,SAAjB,E,mBCC5BK,E,QAAUC,EAAAA,IAAH,2OASI,qBAAEC,MAAiBC,OAAOC,aAA1B,I,mBCPXC,EAAS,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,UAEdC,GAAcC,EAAAA,EAAAA,KAAWL,OAE/B,GAAGG,EACC,OACI,SAACN,EAAD,WACI,SAAC,KAAD,CACIG,OAAQI,EAAYE,gBAKvC,ECfD,MCKO,WACH,IAYMC,EAPuB,EALPC,EAAAA,EAAAA,IAAYjB,EAAAA,KAEViB,EAAAA,EAAAA,IAAYf,IACde,EAAAA,EAAAA,IAAYb,IASac,MAAK,SAAAC,GAAM,OAAe,IAAXA,CAAJ,IAE1D,OACI,4BACI,SAAC,KAAD,KACA,SAACR,EAAD,CAAQC,UAAWI,MAG9B,C","sources":["redux/auth/selectors.js","redux/reviews/selectors.js","redux/tasks/selectors.js","utils/Loader/Loader.styled.js","utils/Loader/Loader.jsx","utils/Layout/index.js","utils/Layout/Layout.jsx"],"sourcesContent":["export const selectIsLoggedInUser = state => state?.auth?.isLoggedIn;\nexport const selectUser = state => state?.auth?.user;\nexport const selectIsRefreshingUser = state => state?.auth?.isRefreshing;\nexport const selectIsIsLoadingUser = state => state?.auth?.isLoading;\n","export const selectError = state => state?.reviews?.error;\nexport const selectReviews = state => state?.reviews?.reviews;\nexport const selectIsLoading = state=> state?.reviews?.isLoading;\n","export const selectErrorTasks = state => state?.tasks?.error;\nexport const selectIsLoadingTasks = state=> state?.tasks?.isLoading;\nexport const selectAllTasks = state => state?.tasks?.tasks;\n","import styled from \"@emotion/styled\";\n\nexport const Wrapper = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background-color: ${({theme}) => theme.colors.loaderWrapper};\n    opacity: 0.4;\n\n`;","import { ColorRing } from \"react-loader-spinner\";\nimport { Wrapper } from \"./Loader.styled\";\nimport { useTheme } from \"@emotion/react\";\n\nexport const Loader = ({isVisible}) => {\n    \n    const themeColors = useTheme().colors;\n\n    if(isVisible) { \n        return(\n            <Wrapper>\n                <ColorRing \n                    colors={themeColors.loaderCircle}\n                />\n            </Wrapper>\n        );\n    }\n};\n\n","import { Layout } from './Layout';\n\nexport default Layout;\n","import { useSelector } from \"react-redux\";\nimport { Outlet } from \"react-router-dom\";\nimport { selectIsIsLoadingUser } from \"redux/auth/selectors\";\nimport { selectIsLoading } from \"redux/reviews/selectors\";\nimport { selectIsLoadingTasks } from \"redux/tasks/selectors\";\nimport { Loader } from \"utils/Loader/Loader\";\n\nexport function Layout() {\n    const isAuthLoading = useSelector(selectIsIsLoadingUser);\n    // const isModalLoading = useSelector(/* modal isLoading selector */);\n    const isReviewLoading = useSelector(selectIsLoading);\n    const isTaskLoading = useSelector(selectIsLoadingTasks);\n\n    const loadingStatusesArray = [\n        isAuthLoading, \n        // isModalLoading, \n        isReviewLoading, \n        isTaskLoading\n    ];\n\n    const isAnythingLoading = loadingStatusesArray.some(status => status === true);\n\n    return (\n        <div>\n            <Outlet />\n            <Loader isVisible={isAnythingLoading}/>\n        </div>\n    )\n};\n"],"names":["selectUser","state","auth","user","selectIsIsLoadingUser","isLoading","selectIsLoading","reviews","selectIsLoadingTasks","tasks","Wrapper","styled","theme","colors","loaderWrapper","Loader","isVisible","themeColors","useTheme","loaderCircle","isAnythingLoading","useSelector","some","status"],"sourceRoot":""}