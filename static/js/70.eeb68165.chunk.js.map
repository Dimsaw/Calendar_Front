{"version":3,"file":"static/js/70.eeb68165.chunk.js","mappings":"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","sources":["components/Auth/LoginForm/LoginForm.styled.js","components/Auth/RegisterForm/RegisterForm.styled.js","components/Auth/AuthField/AuthField.styled.js","components/Auth/AuthField/AuthField.jsx","components/Auth/LoginForm/LoginForm.jsx","components/Auth/RegisterForm/RegisterForm.jsx","pages/RegisterPage.jsx","pages/RegisterPage.styled.js"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const StyledForm = styled.form`\n    position: relative;\n    box-sizing: border-box;\n    width: 100%;\n    min-height: 346px;\n    margin: auto 20px;\n    padding: 40px 20px;\n    display: flex;\n    flex-direction: column;\n    background-color: ${({theme}) => (theme.colors.white)};\n    border-radius: 8px;\n    font-family: Inter, -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n\n    @media screen and (min-width: ${({theme}) => (theme.breakpoints.s)}){\n        width: 335px;\n    }\n\n    @media screen and (min-width: ${({theme}) => (theme.breakpoints.m)}){\n        width: 480px;\n        min-height: 424px;\n        padding: 40px;\n    }\n`;\n\nexport const StyledHeading = styled.h2`\n    margin-bottom: 8px;\n    color: ${({theme}) => (theme.colors.accent)};\n    font-size: 18px;\n    line-height: 24px;\n    font-weight: 600;\n    text-shadow: ${({theme}) => (theme.shadows.authHeading)};\n    text-align: start;\n\n    @media screen and (min-width: ${({theme}) => (theme.breakpoints.m)}) {\n        margin-bottom: 22px;\n        font-size: 24px;\n    }\n`;\n","import styled from \"@emotion/styled\";\n\n// check main font size and line height and delete doubling\n// check using font family\n\nexport const StyledForm = styled.form`\n    position: relative;\n    box-sizing: border-box;\n    width: 100%;\n    min-height: 469px;\n    margin: auto 20px;\n    padding: 40px 20px;\n    display: flex;\n    flex-direction: column;\n    background-color: ${({theme}) => (theme.colors.white)};\n    border-radius: 8px;\n    font-family: Inter, -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n\n    @media screen and (min-width: ${({theme}) => (theme.breakpoints.s)}){\n        width: 335px;\n    }\n\n    @media screen and (min-width: ${({theme}) => (theme.breakpoints.m)}){\n        width: 480px;\n        min-height: 521px;\n        padding: 40px;\n    }\n`;\n\nexport const StyledHeading = styled.h2`\n    margin-bottom: 8px;\n    color: ${({theme}) => (theme.colors.accent)};\n    font-size: 18px;\n    line-height: 24px;\n    font-weight: 600;\n    text-shadow: ${({theme}) => (theme.shadows.authHeading)};\n    text-align: start;\n\n    @media screen and (min-width: ${({theme}) => (theme.breakpoints.m)}) {\n        margin-bottom: 22px;\n        font-size: 24px;\n    }\n`;\n\nexport const StyledErrorMessage = styled.div `\n  font-weight: 400;\n  font-size: 10px;\n  line-height: 14px;\n  color: #DA1414;\n  display: flex;\n  flex-direction: column;\n`;\n\n\n","import styled from \"@emotion/styled\";\n\n// check main font size and line height and delete doubling\n\nexport const Wrapper = styled.div`\n    position: relative;\n`;\n\nexport const InputContainer = styled.div`\n    position: relative;\n    display: flex;\n    flex-direction: column;\n`;\n\nexport const StyledLabel = styled.label`\n    margin-top: 24px;\n    color: ${({valid, theme}) => {\n        switch (valid) {\n            case true:\n                return theme.colors.saccess;\n            case false:\n                return theme.colors.failed;\n            default:\n                return theme.colors.textCancelBtnIntodo\n        }\n    }};\n    font-weight: 600;\n    font-size: 12px;\n    line-height: 15px;\n    text-align: start;\n    @media screen and (min-width: ${({theme}) => (theme.breakpoints.m)}) {\n        margin-top: 18px;\n        font-size: 14px;\n        line-height: 17px;\n    }\n`;\n\nexport const StyledInput = styled.input`\n    box-sizing: border-box;\n    height: 46px;\n    padding: 14px;\n    margin-top: 8px;\n    background-color: ${({theme}) => (theme.colors.white)};\n    color: ${({theme}) => (theme.colors.textCancelBtnIntodo)};\n    font-weight: 400;\n    font-size: 14px;\n    line-height: 18px;\n    border: 1px solid;\n    border-color: ${({valid, theme}) => {\n        switch (valid) {\n            case true:\n                return theme.colors.saccess;\n            case false:\n                return theme.colors.failed;\n            default:\n                return theme.colors.borderDefaultColor;\n        }\n    }};\n    border-radius: 8px;\n\n    ::placeholder {\n        color: ${({theme}) => (theme.colors.placegolderAuth)}\n    }\n    :focus {\n        border: 1px solid ${({theme}) => (theme.colors.textCancelBtnIntodo)};\n    }\n\n    @media screen and (min-width: ${({theme}) => (theme.breakpoints.m)}) {\n        height: 54px;\n        padding: 18px;\n        font-size: 16px;\n        line-height: 18px;\n    }\n`;\n\nexport const StyledIcon = styled.div`\n    width: 20px;\n    height: 20px;\n    margin-right: 12px;\n    position: absolute;\n    bottom: 13px;\n    right: 0;\n\n`;\n\nexport const StyledInputNotification = styled.p`\n    margin: 0;\n    padding: 0 18px;\n    font-size: 12px;\n    line-height: 14px;\n    color: ${({valid, theme}) => {\n        switch (valid) {\n            case true:\n                return theme.colors.saccess;\n            case false:\n                return theme.colors.failed;\n            default:\n                return 'transparant';\n        }\n    }};\n`;\n","import {\n  Wrapper,\n  StyledInput,\n  StyledLabel,\n  StyledIcon,\n  InputContainer,\n  StyledInputNotification,\n} from './AuthField.styled';\nimport { BiErrorCircle, BiCheckCircle } from 'react-icons/bi';\nimport PropTypes from 'prop-types';\nimport { useTheme } from '@emotion/react';\n\nexport const AuthField = ({ valid, onChange, value, name, type, placeholder, errorMessage, lableName }) => {\n  const themeColors = useTheme().colors;\n\n  return (\n    <Wrapper>\n      <InputContainer>\n        <StyledLabel htmlFor={name.toLowerCase()} valid={valid}>{lableName}</StyledLabel>\n        <StyledInput\n          id={name.toLowerCase()}\n          name={name.toLowerCase()}\n          lableName={lableName}\n          type={type}\n          onChange={onChange}\n          value={value}\n          placeholder={placeholder}\n          valid={valid}\n        />\n        {valid === false && <StyledIcon><BiErrorCircle color={themeColors.failed} size={20} /></StyledIcon>}\n        {valid && <StyledIcon><BiCheckCircle color={themeColors.saccess} size={20} /></StyledIcon>}\n      </InputContainer>\n      {valid === false && <StyledInputNotification valid={valid}>{errorMessage}</StyledInputNotification>}\n    </Wrapper>\n  );\n};\n\nAuthField.propTypes = {\n  valid: PropTypes.oneOf([true, false, null]),\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  lableName: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(['text', 'email']).isRequired,\n  placeholder: PropTypes.string.isRequired,\n  errorMessage: PropTypes.string,\n};\n","import { Formik,  ErrorMessage } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport {\n  StyledForm,\n  StyledHeading,\n} from './LoginForm.styled';\nimport { StyledErrorMessage } from '../RegisterForm/RegisterForm.styled';\nimport { AuthField } from '../AuthField/AuthField';\nimport { loginSchema } from 'helpers';\nimport { logIn } from '../../../redux/auth/operations';\nimport { notification, useNotification } from 'helpers';\nimport { MainBtn } from '../../../utils/Buttons/MainButton.styled';\nimport { CgLogIn } from 'react-icons/cg';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const  toast = useNotification();\n\n  const onSubmitForm = async (values, { resetForm }) => {\n    try {\n      const {payload} = await dispatch(logIn(values));\n      if (payload === 'Request failed with status code 400' || payload === 'Request failed with status code 401') {\n        notification(toast, 'fail', 'Password or email is incorrect. Please check');\n        return;\n      } else if (payload === 'Request failed with status code 403') {\n        notification(toast, 'fail', 'Email is not verified yet. Check email box for verification');\n        return;\n      } else if (payload === 'Request failed with status code 404') {\n        notification(toast, 'fail', 'User is not found. Please check email');\n        return;\n      }\n      resetForm();\n    } catch (err){\n      console.log('Error===>', err);\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        email: '',\n        password: '',\n      }}\n      validationSchema={loginSchema}\n      validateOnBlur={false}\n      validateOnChange={false}\n      onSubmit={onSubmitForm}\n    >\n      {({\n          values,\n          handleSubmit,\n          handleBlur,\n          handleChange,\n        }) => (\n\n    <StyledForm onSubmit={handleSubmit} >\n      <StyledHeading>Log in</StyledHeading>\n\n      <AuthField\n        name={'Email'}\n        lableName={'Email'}\n        value={values.email}\n        type={'email'}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        placeholder=\"Enter email\"\n      />\n      <ErrorMessage component={StyledErrorMessage} name=\"email\" />\n\n      <AuthField\n        name={'Password'}\n        lableName={'Password'}\n        value={values.password}\n        type={'text'}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        placeholder=\"Enter password\"\n      />\n      <ErrorMessage component={StyledErrorMessage} name=\"password\" />\n\n      <MainBtn style={{ width: '100%', marginTop:'32px' }} type=\"submit\">\n        Sign up\n        <CgLogIn style={{ marginLeft: 11, width: 18, height: 18 }} />\n      </MainBtn>\n    </StyledForm>\n      )}\n    </Formik>\n  );\n};\n\n","import { Formik,  ErrorMessage } from 'formik';\nimport {  StyledErrorMessage, StyledForm, StyledHeading } from './RegisterForm.styled';\nimport { AuthField } from '../AuthField/AuthField';\nimport {  registerSchema } from 'helpers/authFieldValidation';\nimport { useDispatch } from 'react-redux';\nimport { register } from '../../../redux/auth/operations';\nimport { notification, useNotification } from 'helpers';\nimport { useNavigate } from 'react-router-dom';\nimport { MainBtn } from '../../../utils/Buttons/MainButton.styled';\nimport { CgLogIn } from 'react-icons/cg';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const  toast = useNotification();\n\n\n  const onSubmitForm = async (values, { resetForm }) => {\n    try {\n      const {payload} = await dispatch(register(values));\n      if (payload !== {} || typeof payload !== 'string') {\n        notification(toast, 'info', 'Check your email and approve registration');\n       navigate('/login');\n        resetForm();\n      } if (typeof payload === 'string'){\n        notification(toast, 'fail', 'User with this email already exists. Please log in');\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        username: '',\n        email: '',\n        password: '',\n      }}\n      validationSchema={registerSchema}\n      validateOnBlur={false}\n      validateOnChange={false}\n      onSubmit={onSubmitForm}\n    >\n      {({ values, handleSubmit, handleBlur, handleChange }) => (\n      <StyledForm onSubmit={handleSubmit}>\n      <StyledHeading>Sign up</StyledHeading>\n      <AuthField\n        name={'username'}\n        lableName={'Name'}\n        value={values.username}\n        type={'text'}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        placeholder='Enter your name'\n      />\n      <ErrorMessage component={StyledErrorMessage} name=\"username\" />\n\n      <AuthField\n        name={'Email'}\n        lableName={'Email'}\n        value={values.email}\n        type={'email'}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        placeholder='Enter email'\n      />\n      <ErrorMessage component={StyledErrorMessage} name=\"email\" />\n\n      <AuthField\n        name={'Password'}\n        lableName={'Password'}\n        value={values.password}\n        type={'text'}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        placeholder='Enter password'\n      />\n      <ErrorMessage component={StyledErrorMessage} name=\"password\" />\n\n      <MainBtn style={{ width: '100%', marginTop:'32px' }} type=\"submit\">\n        Sign up\n        <CgLogIn style={{ marginLeft: 11, width: 18, height: 18 }} />\n      </MainBtn>\n    </StyledForm>\n      )}\n    </Formik>\n  );\n};\n","import { RegisterForm } from 'components/Auth';\nimport { AuthGoogle } from 'components/Main';\nimport {\n  Img,\n  RegisterPageContainer,\n  RegisterPageWrap,\n  StyledNavLink,\n  NavWrap,\n} from './RegisterPage.styled';\nimport normalImage from 'images/others/desktop/goose-quote1x.png';\nimport retinaImage from 'images/others/desktop/goose-quote2x.png';\nimport superRetinaImage from 'images/others/desktop/goose-quote3x.png';\n\nconst RegisterPage = () => {\n  return (\n    <RegisterPageContainer>\n      <Img\n        src={normalImage}\n        srcSet={`${normalImage} 1x, ${retinaImage} 2x, ${superRetinaImage} 3x`}\n        alt=\"Goose wiht tablet\"\n      />\n      <RegisterPageWrap>\n        <RegisterForm />\n        <NavWrap>\n          <StyledNavLink to={'/login'}>Log In</StyledNavLink>\n          <AuthGoogle />\n        </NavWrap>\n      </RegisterPageWrap>\n    </RegisterPageContainer>\n  );\n};\n\nexport default RegisterPage;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport { themes } from 'styles/themes';\nimport { device } from '../styles/mediaVeriables';\nexport const RegisterPageContainer = styled.div`\n  background-color: ${themes.colors.backgroundAuth};\n  height: 100vh;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const RegisterPageWrap = styled.div`\n  text-align: center;\n`;\nexport const StyledNavLink = styled(Link)`\n  display: block;\n  margin-top: ${themes.fontSizes.l};\n  color: ${themes.colors.accent};\n  font-weight: ${themes.fontWeight.sb};\n  font-size: ${themes.fontSizes.xs};\n  line-height: 1.17;\n  text-decoration-line: underline;\n  cursor: pointer;\n  text-shadow: 0px 47px 355px rgba(0, 0, 0, 0.07),\n    0px 9.4px 57.6875px rgba(0, 0, 0, 0.035);\n\n  @media ${device.tablet} {\n    font-size: 18px;\n    line-height: 1.33;\n    margin-top: ${themes.fontSizes.xxl};\n  }\n\n  :hover {\n    color: #2c66bc;\n  }\n`;\n\nexport const NavWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n  align-items: center;\n`;\n\nexport const Img = styled.img`\n  display: none;\n\n  @media ${device.desktop} {\n    display: block;\n    width: 400px;\n    height: 416px;\n    position: absolute;\n    left: 49px;\n    bottom: 0;\n  }\n`;\n"],"names":["StyledForm","styled","theme","colors","white","breakpoints","s","m","StyledHeading","accent","shadows","authHeading","StyledErrorMessage","Wrapper","InputContainer","StyledLabel","valid","saccess","failed","textCancelBtnIntodo","StyledInput","borderDefaultColor","placegolderAuth","StyledIcon","StyledInputNotification","AuthField","onChange","value","name","type","placeholder","errorMessage","lableName","themeColors","useTheme","htmlFor","toLowerCase","id","color","size","LoginForm","dispatch","useDispatch","toast","useNotification","onSubmitForm","values","resetForm","logIn","payload","notification","console","log","initialValues","email","password","validationSchema","loginSchema","validateOnBlur","validateOnChange","onSubmit","handleSubmit","handleBlur","handleChange","onBlur","component","style","width","marginTop","marginLeft","height","RegisterForm","navigate","useNavigate","register","username","registerSchema","src","normalImage","srcSet","retinaImage","superRetinaImage","alt","to","RegisterPageContainer","themes","RegisterPageWrap","StyledNavLink","Link","device","NavWrap","Img"],"sourceRoot":""}