{"version":3,"file":"static/js/214.67be5147.chunk.js","mappings":"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","sources":["components/Auth/LoginForm/LoginForm.styled.js","components/Auth/AuthField/AuthField.styled.js","components/Auth/AuthField/AuthField.jsx","components/Auth/LoginForm/LoginForm.jsx","components/Auth/RegisterForm/RegisterForm.styled.js","components/Auth/RegisterForm/RegisterForm.jsx","pages/RegisterPage.styled.js"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport { Link } from \"react-router-dom\";\n\n// check main font size and line height and delete doubling\n\nexport const StyledForm = styled.form`\n    position: relative;\n    box-sizing: border-box;\n    width: 100%;\n    min-height: 346px;\n    margin: auto 20px;\n    padding: 40px 20px;\n    display: flex;\n    flex-direction: column;\n    background-color: ${({theme}) => (theme.colors.white)};\n    border-radius: 8px;\n    font-family: Inter, -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n\n    @media screen and (min-width: ${({theme}) => (theme.breakpoints.s)}){\n        width: 335px;\n    }\n\n    @media screen and (min-width: ${({theme}) => (theme.breakpoints.m)}){\n        width: 480px;\n        min-height: 424px;\n        padding: 40px;\n    }\n`;\n\nexport const StyledHeading = styled.h2`\n    margin-bottom: 8px;\n    color: ${({theme}) => (theme.colors.accent)};\n    font-size: 18px;\n    line-height: 24px;\n    font-weight: 600;\n    text-shadow: ${({theme}) => (theme.shadows.authHeading)};\n    text-align: start;\n\n    @media screen and (min-width: ${({theme}) => (theme.breakpoints.m)}) {\n        margin-bottom: 22px;\n        font-size: 24px;  \n    }\n`;\n\nexport const StyledIcon = styled.div`\n    margin-left: 14px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n`;\n\nexport const StyledButton = styled.button`\n    height: 46px;\n    margin-top: 32px;\n    background-color: ${({theme}) => (theme.colors.accent)};\n    color: ${({theme}) => (theme.colors.white)};\n    font-weight: 600;\n    font-family: inherit;\n    font-size: 14px;\n    line-height: 18px;\n    letter-spacing: -0.02em;\n    box-shadow: ${({theme}) => (theme.shadows.authButton)};\n    border-radius: 16px;\n    border-width: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer; \n    \n    :hover {\n        background-color: ${({theme}) => (theme.colors.hovered)};\n    }\n\n    @media screen and (min-width: ${({theme}) => (theme.breakpoints.m)}) {\n        height: 56px;\n        margin-top: 48px;\n        font-size: 18px;\n        line-height: 24px;\n    }\n`;\n\nexport const StyledLink = styled(Link)`\n    position: absolute;\n    bottom: -32px;\n    right: 0;\n    width: 100%;\n    font-weight: 600;\n    font-size: 12px;\n    line-height: 14px;\n    color: ${({theme}) => (theme.colors.accent)};\n    text-align: center;\n    @media screen and (min-width: ${({theme}) => (theme.breakpoints.m)}) {\n        font-size: 18px;\n        line-height: 24px;\n    }\n`;","import styled from \"@emotion/styled\";\n\n// check main font size and line height and delete doubling\n\nexport const Wrapper = styled.div`\n    position: relative;\n`;\n\nexport const InputContainer = styled.div`\n    position: relative;\n    display: flex;\n    flex-direction: column;\n`;\n\nexport const StyledLabel = styled.label`\n    margin-top: 24px;\n    color: ${({valid, theme}) => {\n        switch (valid) {\n            case true:\n                return theme.colors.saccess;\n            case false:\n                return theme.colors.failed;\n            default:\n                return theme.colors.textCancelBtnIntodo\n        }\n    }};\n    font-weight: 600;\n    font-size: 12px;\n    line-height: 15px;\n    text-align: start;\n    @media screen and (min-width: ${({theme}) => (theme.breakpoints.m)}) {\n        margin-top: 18px;\n        font-size: 14px;\n        line-height: 17px;\n    }\n`;\n\nexport const StyledInput = styled.input`\n    box-sizing: border-box;\n    height: 46px;\n    padding: 14px;\n    margin-top: 8px;\n    background-color: ${({theme}) => (theme.colors.white)};\n    color: ${({theme}) => (theme.colors.textCancelBtnIntodo)};\n    font-weight: 400;\n    font-size: 14px;\n    line-height: 18px;\n    border: 1px solid;\n    border-color: ${({valid, theme}) => {\n        switch (valid) {\n            case true:\n                return theme.colors.saccess;\n            case false:\n                return theme.colors.failed;\n            default:\n                return theme.colors.borderDefaultColor;\n        }\n    }};\n    border-radius: 8px;\n\n    ::placeholder {\n        color: ${({theme}) => (theme.colors.placegolderAuth)}\n    }\n    :focus {\n        border: 1px solid ${({theme}) => (theme.colors.textCancelBtnIntodo)};\n    }\n\n    @media screen and (min-width: ${({theme}) => (theme.breakpoints.m)}) {\n        height: 54px;\n        padding: 18px;\n        font-size: 16px;\n        line-height: 18px;\n    }\n`;\n\nexport const StyledIcon = styled.div`\n    width: 20px;\n    height: 20px;\n    margin-right: 12px;\n    position: absolute;\n    bottom: 13px;\n    right: 0;\n\n`;\n\nexport const StyledInputNotification = styled.p`\n    margin: 0;\n    padding: 0 18px;\n    font-size: 12px;\n    line-height: 14px;\n    color: ${({valid, theme}) => {\n        switch (valid) {\n            case true:\n                return theme.colors.saccess;\n            case false:\n                return theme.colors.failed;\n            default:\n                return 'transparant';\n        }\n    }};\n`;\n","import {\n  Wrapper,\n  StyledInput,\n  StyledLabel,\n  StyledIcon,\n  InputContainer,\n  StyledInputNotification,\n} from './AuthField.styled';\nimport { BiErrorCircle, BiCheckCircle } from 'react-icons/bi';\nimport PropTypes from 'prop-types';\nimport { useTheme } from '@emotion/react';\n\nexport const AuthField = ({ valid, onChange, value, name, type, placeholder, errorMessage, lableName }) => {\n  const themeColors = useTheme().colors;\n\n  return (\n    <Wrapper>\n      <InputContainer>\n        <StyledLabel htmlFor={name.toLowerCase()} valid={valid}>{lableName}</StyledLabel>\n        <StyledInput\n          id={name.toLowerCase()}\n          name={name.toLowerCase()}\n          lableName={lableName}\n          type={type}\n          onChange={onChange}\n          value={value}\n          placeholder={placeholder}\n          valid={valid}\n        />\n        {valid === false && <StyledIcon><BiErrorCircle color={themeColors.failed} size={20} /></StyledIcon>}\n        {valid && <StyledIcon><BiCheckCircle color={themeColors.saccess} size={20} /></StyledIcon>}\n      </InputContainer>\n      {valid === false && <StyledInputNotification valid={valid}>{errorMessage}</StyledInputNotification>}\n    </Wrapper>\n  );\n};\n\nAuthField.propTypes = {\n  valid: PropTypes.oneOf([true, false, null]),\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  lableName: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(['text', 'email']).isRequired,\n  placeholder: PropTypes.string.isRequired,\n  errorMessage: PropTypes.string,\n};\n","import { useFormik } from 'formik';\nimport {\n  StyledButton,\n  StyledForm,\n  StyledHeading,\n  StyledIcon,\n} from './LoginForm.styled';\nimport { useState } from 'react';\nimport { AuthField } from '../AuthField/AuthField';\nimport { validateLoginForm } from 'helpers';\nimport { FiLogIn } from 'react-icons/fi';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from '../../../redux/auth/operations';\nimport { notification, useNotification } from 'helpers';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const [emailValid, setEmailValid] = useState(null);\n  const [passwordValid, setPasswordValid] = useState(null);\n\n  const  toast = useNotification();\n\n  const onSubmitForm = async (values) => {\n    try {\n      // Validation of inputs\n      const validationResponse = await validateLoginForm(values);\n      setEmailValid(validationResponse.email);\n      setPasswordValid(validationResponse.password);\n\n      const {payload} = await dispatch(logIn(values));\n\n      console.log('res login ===>', payload);\n\n        if (payload === 'Request failed with status code 400') {\n          notification(toast, 'fail', 'Password or email is incorrect. Please check');\n          setPasswordValid(null);\n          formik.setFieldValue('password', '');\n        } else if (payload === 'Request failed with status code 403') {\n          notification(toast, 'fail', 'Email is not verified yet. Check email box for verification');\n          setPasswordValid(null);\n          formik.setFieldValue('password', '');\n        } else if (payload === 'Request failed with status code 404') {\n          notification(toast, 'fail', 'User is not found. Please check email');\n          setPasswordValid(null);\n          formik.setFieldValue('password', '');\n        }\n    } catch (err){\n      console.log('Error===>', err);\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      password: '',\n      email: '',\n    },\n    onSubmit: values => {\n      onSubmitForm(values);\n    },\n  });\n\n  return (\n    <StyledForm onSubmit={formik.handleSubmit}>\n      <StyledHeading>Log in</StyledHeading>\n\n      <AuthField\n        name={'Email'}\n        lableName={'Email'}\n        value={formik.values.email}\n        type={'email'}\n        onChange={formik.handleChange}\n        valid={emailValid?.valid}\n        placeholder=\"Enter email\"\n        errorMessage={emailValid?.error}\n      />\n\n      <AuthField\n        name={'Password'}\n        lableName={'Password'}\n        value={formik.values.password}\n        type={'text'}\n        onChange={formik.handleChange}\n        valid={passwordValid?.valid}\n        placeholder=\"Enter password\"\n        errorMessage={passwordValid?.error}\n      />\n\n      <StyledButton type=\"submit\">\n        Log in\n        <StyledIcon>\n          <FiLogIn size={17} color=\"#FFFFFF\" />\n        </StyledIcon>\n      </StyledButton>\n    </StyledForm>\n  );\n};\n","import styled from \"@emotion/styled\";\n\n// check main font size and line height and delete doubling\n// check using font family\n\nexport const StyledForm = styled.form`\n    position: relative;\n    box-sizing: border-box;\n    width: 100%;\n    min-height: 469px;\n    margin: auto 20px;\n    padding: 40px 20px;\n    display: flex;\n    flex-direction: column;\n    background-color: ${({theme}) => (theme.colors.white)};\n    border-radius: 8px;\n    font-family: Inter, -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n\n    @media screen and (min-width: ${({theme}) => (theme.breakpoints.s)}){\n        width: 335px;\n    }\n\n    @media screen and (min-width: ${({theme}) => (theme.breakpoints.m)}){\n        width: 480px;\n        min-height: 521px;\n        padding: 40px;\n    }\n`;\n\nexport const StyledHeading = styled.h2`\n    margin-bottom: 8px;\n    color: ${({theme}) => (theme.colors.accent)};\n    font-size: 18px;\n    line-height: 24px;\n    font-weight: 600;\n    text-shadow: ${({theme}) => (theme.shadows.authHeading)};\n    text-align: start;\n\n    @media screen and (min-width: ${({theme}) => (theme.breakpoints.m)}) {\n        margin-bottom: 22px;\n        font-size: 24px;\n    }\n`;\n\nexport const StyledIcon = styled.div`\n    margin-left: 14px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n`;\n\nexport const StyledButton = styled.button`\n    height: 46px;\n    margin-top: 32px;\n    background-color: ${({theme}) => (theme.colors.accent)};\n    color: ${({theme}) => (theme.colors.white)};\n    font-weight: 600;\n    font-size: 14px;\n    font-family: inherit;\n    line-height: 18px;\n    letter-spacing: -0.02em;\n    box-shadow: ${({theme}) => (theme.shadows.authButton)};\n    border-radius: 16px;\n    border-width: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n\n    :hover {\n        background-color: ${({theme}) => (theme.colors.hovered)};\n    }\n\n    @media screen and (min-width: ${({theme}) => (theme.breakpoints.m)}) {\n        height: 56px;\n        margin-top: 48px;\n        font-size: 18px;\n        line-height: 24px;\n    }\n`;\n","import { useFormik } from 'formik';\nimport { StyledButton, StyledForm, StyledHeading, StyledIcon } from './RegisterForm.styled';\nimport { useState } from 'react';\nimport { AuthField } from '../AuthField/AuthField';\nimport { validateRegisterForm } from 'helpers/authFieldValidation';\nimport { FiLogIn } from 'react-icons/fi';\nimport { useDispatch } from 'react-redux';\nimport { register } from '../../../redux/auth/operations';\nimport { notification, useNotification } from 'helpers';\nimport { useNavigate } from 'react-router-dom';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const [emailValid, setEmailValid] = useState(null);\n  const [passwordValid, setPasswordValid] = useState(null);\n  const [usernameValid, setUsernameValid] = useState(null);\n\n  const navigate = useNavigate();\n  const  toast = useNotification();\n  const onSubmitForm = async (values) => {\n    try {\n      // validation of inputs\n      const validationResponse = await validateRegisterForm(values);\n      setEmailValid(validationResponse.email.valid);\n      setPasswordValid(validationResponse.password.valid);\n      setUsernameValid(validationResponse.username.valid);\n\n      const {payload} = await dispatch(register(values));\n\n      if (payload) {\n        notification(toast, 'info', 'Check your email and approve registration');\n        navigate('/login');\n        formik.resetForm();\n      };\n      if (payload === 409){\n        notification(toast, 'fail', 'User with this email already exists. Please log in');\n      } else {\n        notification(toast, 'fail', 'Enter valid email, password, and name');\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      username: '',\n      password: '',\n      email: '',\n    },\n    onSubmit: values => {\n      onSubmitForm(values);\n    },\n  });\n\n  return (\n    <StyledForm onSubmit={formik.handleSubmit}>\n      <StyledHeading>Sign up</StyledHeading>\n      <AuthField\n        name={'username'}\n        lableName={'Name'}\n        value={formik.values.username}\n        type={'text'}\n        onChange={formik.handleChange}\n        valid={usernameValid?.valid}\n        placeholder='Enter your name'\n        errorMessage={usernameValid?.error}\n      />\n\n      <AuthField\n        name={'Email'}\n        lableName={'Email'}\n        value={formik.values.email}\n        type={'email'}\n        onChange={formik.handleChange}\n        valid={emailValid?.valid}\n        placeholder='Enter email'\n        errorMessage={emailValid?.error}\n      />\n\n      <AuthField\n        name={'Password'}\n        lableName={'Password'}\n        value={formik.values.password}\n        type={'text'}\n        onChange={e => {\n          formik.handleChange(e);\n          setPasswordValid(null);\n        }}\n        valid={passwordValid?.valid}\n        placeholder='Enter password'\n        errorMessage={passwordValid?.error}\n      />\n\n      <StyledButton type='submit'>\n        Sign up\n        <StyledIcon><FiLogIn size={17} color='#FFFFFF' /></StyledIcon>\n      </StyledButton>\n\n    </StyledForm>\n  );\n};\n","import styled from \"@emotion/styled\";\nimport { Link } from 'react-router-dom';\nimport { themes } from 'styles/themes';\nimport { device } from '../styles/mediaVeriables';\nexport const RegisterPageContainer = styled.div`\n  background-color: ${themes.colors.backgroundAuth};\n  height: 100vh;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const RegisterPageWrap = styled.div`\ntext-align: center;\n\n`;\nexport const StyledNavLink = styled(Link)`\n  display: block;\n  margin-top: ${themes.fontSizes.l};\n  color:${themes.colors.accent};\n  font-weight: ${themes.fontWeight.sb};\n  font-size: ${themes.fontSizes.xs};\n  line-height: 1.17;\n  text-decoration-line: underline;\n  cursor: pointer;\n  text-shadow: 0px 47px 355px rgba(0, 0, 0, 0.07), 0px 9.4px 57.6875px rgba(0, 0, 0, 0.035);\n\n  @media ${device.tablet} {\n    font-size: 18px;\n    line-height: 1.33;\n    margin-top: ${themes.fontSizes.xxl};\n  }\n\n  :hover {\n    color: #2c66bc;\n  }\n`;\n\nexport const Img = styled.img`\n  display: none;\n\n  @media ${device.desktop} {\n    display: block;\n    width: 400px;\n    height: 416px;\n    position: absolute;\n    left: 49px;\n    bottom: 0;\n  }\n`;\n\n\n"],"names":["StyledForm","styled","theme","colors","white","breakpoints","s","m","StyledHeading","accent","shadows","authHeading","StyledIcon","StyledButton","authButton","hovered","Link","Wrapper","InputContainer","StyledLabel","valid","saccess","failed","textCancelBtnIntodo","StyledInput","borderDefaultColor","placegolderAuth","StyledInputNotification","AuthField","onChange","value","name","type","placeholder","errorMessage","lableName","themeColors","useTheme","htmlFor","toLowerCase","id","color","size","LoginForm","dispatch","useDispatch","useState","emailValid","setEmailValid","passwordValid","setPasswordValid","toast","useNotification","onSubmitForm","values","validateLoginForm","validationResponse","email","password","logIn","payload","console","log","notification","formik","setFieldValue","useFormik","initialValues","onSubmit","handleSubmit","handleChange","error","RegisterForm","usernameValid","setUsernameValid","navigate","useNavigate","validateRegisterForm","username","register","resetForm","e","RegisterPageContainer","themes","RegisterPageWrap","StyledNavLink","device","Img"],"sourceRoot":""}