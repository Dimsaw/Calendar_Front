{"version":3,"file":"static/js/82.5fef7b9d.chunk.js","mappings":"gSAGaA,EAAaC,EAAAA,QAAAA,KAAH,+lBASD,qBAAGC,MAAkBC,OAAOC,KAA5B,IAMY,qBAAGF,MAAkBG,YAAYC,CAAjC,IAIA,qBAAGJ,MAAkBG,YAAYE,CAAjC,IAOrBC,EAAiBP,EAAAA,QAAAA,IAAH,qMAMO,qBAAGC,MAAkBG,YAAYE,CAAjC,IAKrBE,GAAgBR,EAAAA,EAAAA,SAAOS,EAAAA,GAAPT,CAAH,ydAEJ,qBAAGC,MAAkBC,OAAOQ,MAA5B,IACX,qBAAGT,MAAkBC,OAAOC,KAA5B,IAKK,qBAAGF,MAAkBU,QAAQC,UAA7B,IASQ,qBAAGX,MAAkBC,OAAOW,OAA5B,IAGU,qBAAGZ,MAAkBG,YAAYE,CAAjC,IAMrBQ,EAAgBd,EAAAA,QAAAA,GAAH,sNACf,qBAAGC,MAAkBC,OAAOQ,MAA5B,IAIM,qBAAGT,MAAkBU,QAAQI,WAA7B,IAGiB,qBAAGd,MAAkBG,YAAYE,CAAjC,ICrErBP,EAAaC,EAAAA,QAAAA,KAAH,+lBASD,qBAAGC,MAAkBC,OAAOC,KAA5B,IAMY,qBAAGF,MAAkBG,YAAYC,CAAjC,IAIA,qBAAGJ,MAAkBG,YAAYE,CAAjC,IAOrBQ,EAAgBd,EAAAA,QAAAA,GAAH,sNACf,qBAAGC,MAAkBC,OAAOQ,MAA5B,IAIM,qBAAGT,MAAkBU,QAAQI,WAA7B,IAGiB,qBAAGd,MAAkBG,YAAYE,CAAjC,IAKrBU,EAAqBhB,EAAAA,QAAAA,IAAH,uJ,UCzClBiB,EAAUjB,EAAAA,QAAAA,IAAH,+CAIPkB,EAAiBlB,EAAAA,QAAAA,IAAH,4FAMdmB,EAAcnB,EAAAA,QAAAA,MAAH,mQAEb,YAAuB,IAApBoB,EAAmB,EAAnBA,MAAOnB,EAAY,EAAZA,MACjB,OAAQmB,GACN,KAAK,EACH,OAAOnB,EAAMC,OAAOmB,QACtB,KAAK,EACH,OAAOpB,EAAMC,OAAOoB,OACtB,QACE,OAAOrB,EAAMC,OAAOqB,oBAEzB,IAK+B,qBAAGtB,MAAkBG,YAAYE,CAAjC,IAOrBkB,EAAcxB,EAAAA,QAAAA,MAAH,igBAMF,qBAAGC,MAAkBC,OAAOC,KAA5B,IACX,qBAAGF,MAAkBC,OAAOqB,mBAA5B,IAKO,YAAuB,IAApBH,EAAmB,EAAnBA,MAAOnB,EAAY,EAAZA,MACxB,OAAQmB,GACN,KAAK,EACH,OAAOnB,EAAMC,OAAOmB,QACtB,KAAK,EACH,OAAOpB,EAAMC,OAAOoB,OACtB,QACE,OAAOrB,EAAMC,OAAOuB,mBAEzB,IAIU,qBAAGxB,MAAkBC,OAAOwB,eAA5B,IAGW,qBAAGzB,MAAkBC,OAAOqB,mBAA5B,IAGU,qBAAGtB,MAAkBG,YAAYE,CAAjC,IAQrBqB,EAAa3B,EAAAA,QAAAA,IAAH,qIASV4B,EAA0B5B,EAAAA,QAAAA,EAAH,mHAKzB,YAAuB,IAApBoB,EAAmB,EAAnBA,MAAOnB,EAAY,EAAZA,MACjB,OAAQmB,GACN,KAAK,EACH,OAAOnB,EAAMC,OAAOmB,QACtB,KAAK,EACH,OAAOpB,EAAMC,OAAOoB,OACtB,QACE,MAAO,cAEZ,IAGUO,EAAe7B,EAAAA,QAAAA,IAAH,+CAIZ8B,EAAc9B,EAAAA,QAAAA,OAAH,4G,iDCzFX+B,EAAY,SAAC,GASnB,IARLX,EAQI,EARJA,MACAY,EAOI,EAPJA,SACAC,EAMI,EANJA,MACAC,EAKI,EALJA,KACAC,EAII,EAJJA,KACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,aACAC,EACI,EADJA,UAEMC,GAAcC,EAAAA,EAAAA,KAAWtC,OAEzBuC,GAAmBC,EAAAA,EAAAA,QAAO,MAChC,GAA8BC,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAYA,OANAC,EAAAA,EAAAA,YAAU,WACJL,EAAiBM,UACnBN,EAAiBM,QAAQZ,KAAOS,EAAU,OAAS,WAEtD,GAAE,CAACA,KAGF,UAAC3B,EAAD,YACE,UAACC,EAAD,YACE,SAACC,EAAD,CAAa6B,QAASd,EAAKe,cAAe7B,MAAOA,EAAjD,SACGkB,KAEH,UAACT,EAAD,YACE,SAACL,EAAD,CACE0B,GAAIhB,EAAKe,cACTf,KAAMA,EAAKe,cACXX,UAAWA,EACXH,KAAMA,EACNH,SAAUA,EACVC,MAAOA,EACPG,YAAaA,EACbhB,MAAOA,EACP+B,IAAc,aAAThB,EAAsBM,EAAmB,OAEtC,aAATN,IACC,SAACL,EAAD,CAAasB,QA7BL,WAChBP,GAAW,SAAAQ,GAAS,OAAKA,CAAL,GACrB,EA2BS,SACGT,GACC,SAAC,MAAD,CAAcU,KAAM,MAEpB,SAAC,MAAD,CAAuBA,KAAM,WAK1B,IAAVlC,IACC,SAACO,EAAD,WACE,SAAC,MAAD,CAAe4B,MAAOhB,EAAYjB,OAAQgC,KAAM,OAGnDlC,IACC,SAACO,EAAD,WACE,SAAC,MAAD,CAAe4B,MAAOhB,EAAYlB,QAASiC,KAAM,WAI5C,IAAVlC,IACC,SAACQ,EAAD,CAAyBR,MAAOA,EAAhC,SACGiB,MAKV,E,wCCtEYmB,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,GAAQC,EAAAA,EAAAA,MAERC,EAAY,mCAAG,WAAOC,EAAP,qFAAiBC,EAAjB,EAAiBA,UAAjB,kBAESN,GAASO,EAAAA,EAAAA,IAAMF,IAFxB,mBAIH,yCAFNG,EAFS,EAETA,UAGM,wCAAZA,EALe,wBAOfC,EAAAA,EAAAA,IACEP,EACA,OACA,gDAVa,8BAaM,wCAAZM,EAbM,wBAcfC,EAAAA,EAAAA,IACEP,EACA,OACA,+DAjBa,8BAoBM,wCAAZM,EApBM,wBAqBfC,EAAAA,EAAAA,IAAaP,EAAO,OAAQ,yCArBb,2BAwBjBI,IAxBiB,kDA0BjBI,QAAQC,IAAI,YAAZ,MA1BiB,0DAAH,wDA8BlB,OACE,SAAC,KAAD,CACEC,cAAe,CACbC,MAAO,GACPC,SAAU,IAEZC,iBAAkBC,EAAAA,GAClBC,gBAAgB,EAChBC,kBAAkB,EAClBC,SAAUf,EARZ,SAUG,gBAAGC,EAAH,EAAGA,OAAQe,EAAX,EAAWA,aAAcC,EAAzB,EAAyBA,WAAYC,EAArC,EAAqCA,aAArC,OACC,UAAChF,EAAD,CAAY6E,SAAUC,EAAtB,WACE,UAACtE,EAAD,YACE,SAACO,EAAD,UAAe,YACf,UAACN,EAAD,CAAewE,GAAG,IAAlB,UAAsB,QAEpB,SAAC,MAAD,CACEC,MAAO,CACLC,WAAY,YAMpB,SAACnD,EAAD,CACEG,KAAM,QACNI,UAAW,QACXL,MAAO6B,EAAOQ,MACdnC,KAAM,QACNH,SAAU+C,EACVI,OAAQL,EACR1C,YAAY,iBAEd,SAAC,KAAD,CAAcgD,UAAWpE,EAAoBkB,KAAK,WAElD,SAACH,EAAD,CACEG,KAAM,WACNI,UAAW,WACXL,MAAO6B,EAAOS,SACdpC,KAAM,WACNH,SAAU+C,EACVI,OAAQL,EACR1C,YAAY,oBAEd,SAAC,KAAD,CAAcgD,UAAWpE,EAAoBkB,KAAK,cAElD,UAAC,KAAD,CAAS+C,MAAO,CAAEI,MAAO,OAAQC,UAAW,QAAUnD,KAAK,SAA3D,UAAoE,UAElE,SAAC,MAAD,CAAS8C,MAAO,CAAEC,WAAY,GAAIG,MAAO,GAAIE,OAAQ,WAtC1D,GA4CN,E,qBC1FYC,GAAe,WAC1B,IAAM/B,GAAWC,EAAAA,EAAAA,MACX+B,GAAWC,EAAAA,GAAAA,MACX/B,GAAQC,EAAAA,EAAAA,MAERC,EAAY,mCAAG,WAAOC,EAAP,qFAAiBC,EAAjB,EAAiBA,UAAjB,kBAESN,GAASkC,EAAAA,EAAAA,IAAS7B,IAF3B,iBAETG,EAFS,EAETA,WACQ,CAAC,GAAwB,kBAAZA,KAC3BC,EAAAA,EAAAA,IACEP,EACA,OACA,6CAEF8B,EAAS,UACT1B,KAEqB,kBAAZE,IACTC,EAAAA,EAAAA,IACEP,EACA,OACA,sDAhBa,kDAoBjBQ,QAAQC,IAAR,MApBiB,0DAAH,wDAwBlB,OACE,SAAC,KAAD,CACEC,cAAe,CACbuB,SAAU,GACVtB,MAAO,GACPC,SAAU,IAEZC,iBAAkBqB,EAAAA,EAClBnB,gBAAgB,EAChBC,kBAAkB,EAClBC,SAAUf,EATZ,SAWG,gBAAGC,EAAH,EAAGA,OAAQe,EAAX,EAAWA,aAAcC,EAAzB,EAAyBA,WAAYC,EAArC,EAAqCA,aAArC,OACC,UAAC,EAAD,CAAYH,SAAUC,EAAtB,WACE,UAACtE,EAAD,YACE,SAAC,EAAD,UAAe,aACf,UAACC,EAAD,CAAewE,GAAG,IAAlB,UAAsB,QAEpB,SAAC,MAAD,CACEC,MAAO,CACLC,WAAY,YAKpB,SAACnD,EAAD,CACEG,KAAM,WACNI,UAAW,OACXL,MAAO6B,EAAO8B,SACdzD,KAAM,OACNH,SAAU+C,EACVI,OAAQL,EACR1C,YAAY,qBAEd,SAAC,KAAD,CAAcgD,UAAWpE,EAAoBkB,KAAK,cAElD,SAACH,EAAD,CACEG,KAAM,QACNI,UAAW,QACXL,MAAO6B,EAAOQ,MACdnC,KAAM,QACNH,SAAU+C,EACVI,OAAQL,EACR1C,YAAY,iBAEd,SAAC,KAAD,CAAcgD,UAAWpE,EAAoBkB,KAAK,WAElD,SAACH,EAAD,CACEG,KAAM,WACNI,UAAW,WACXL,MAAO6B,EAAOS,SACdpC,KAAM,WACNH,SAAU+C,EACVI,OAAQL,EACR1C,YAAY,oBAEd,SAAC,KAAD,CAAcgD,UAAWpE,EAAoBkB,KAAK,cAElD,UAAC,KAAD,CAAS+C,MAAO,CAAEI,MAAO,OAAQC,UAAW,QAAUnD,KAAK,SAA3D,UAAoE,WAElE,SAAC,MAAD,CAAS8C,MAAO,CAAEC,WAAY,GAAIG,MAAO,GAAIE,OAAQ,WAhD1D,GAsDN,C,8TC9GYO,EAAM9F,EAAAA,QAAAA,IAAH,yLAGL+F,EAAAA,EAAAA,S,6BC2CX,EA9BkB,WAChB,IAAMC,GAAiBC,EAAAA,EAAAA,IAAYC,EAAAA,IAC7BT,GAAWC,EAAAA,EAAAA,MAUjB,OARA5C,EAAAA,EAAAA,YAAU,WACR,GAAIkD,EAAgB,CAClB,IACMG,GADc,IAAIC,MACUC,cAAcC,MAAM,EAAG,IACzDb,EAAS,mBAAD,OAAoBU,GAC7B,CACF,GAAE,CAACH,EAAgBP,KAGlB,UAAC,KAAD,YACE,SAACK,EAAD,CACES,IAAKC,EACLC,OAAM,UAAKD,EAAL,gBAAwBE,EAAxB,gBAA2CC,EAA3C,OACNC,IAAI,qBAEN,UAAC,KAAD,YACE,SAAC,IAAD,KACA,UAAC,KAAD,YACE,SAAC,KAAD,CAAe5B,GAAI,YAAnB,SAAgC,aAChC,SAAC,KAAD,YAKT,C,uNC1CY6B,EAAwB7G,EAAAA,QAAAA,IAAH,oLACZ8G,EAAAA,EAAAA,OAAAA,gBASTC,EAAmB/G,EAAAA,QAAAA,IAAH,+CAGhBgH,GAAgBhH,EAAAA,EAAAA,SAAOS,EAAAA,GAAPT,CAAH,yaAEV8G,EAAAA,EAAAA,UAAAA,EACLA,EAAAA,EAAAA,OAAAA,OACMA,EAAAA,EAAAA,WAAAA,GACFA,EAAAA,EAAAA,UAAAA,GAOJf,EAAAA,EAAAA,OAGOe,EAAAA,EAAAA,UAAAA,KAQLG,EAAUjH,EAAAA,QAAAA,IAAH,2GAOP8F,EAAM9F,EAAAA,QAAAA,IAAH,sLAGL+F,EAAAA,EAAAA,Q","sources":["components/Auth/LoginForm/LoginForm.styled.js","components/Auth/RegisterForm/RegisterForm.styled.js","components/Auth/AuthField/AuthField.styled.js","components/Auth/AuthField/AuthField.jsx","components/Auth/LoginForm/LoginForm.jsx","components/Auth/RegisterForm/RegisterForm.jsx","pages/LoginPage.styled.js","pages/LoginPage.jsx","pages/RegisterPage.styled.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const StyledForm = styled.form`\n  position: relative;\n  box-sizing: border-box;\n  width: 100%;\n  min-height: 346px;\n  margin: auto 20px;\n  padding: 40px 20px;\n  display: flex;\n  flex-direction: column;\n  background-color: ${({ theme }) => theme.colors.white};\n  border-radius: 8px;\n  font-family: Inter, -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto',\n    'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.s}) {\n    width: 335px;\n  }\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.m}) {\n    width: 480px;\n    min-height: 424px;\n    padding: 40px;\n  }\n`;\n\nexport const HeadingWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 8px;\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.m}) {\n    margin-bottom: 22px;\n  }\n`;\n\nexport const StyledHomeBtn = styled(Link)`\n  padding: 10px 15px;\n  background-color: ${({ theme }) => theme.colors.accent};\n  color: ${({ theme }) => theme.colors.white};\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 18px;\n  letter-spacing: -0.02em;\n  box-shadow: ${({ theme }) => theme.shadows.authButton};\n  border-radius: 16px;\n  border-width: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n\n  :hover {\n    background-color: ${({ theme }) => theme.colors.hovered};\n  }\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.m}) {\n    font-size: 18px;\n    line-height: 24px;\n  }\n`;\n\nexport const StyledHeading = styled.h2`\n  color: ${({ theme }) => theme.colors.accent};\n  font-size: 18px;\n  line-height: 24px;\n  font-weight: 600;\n  text-shadow: ${({ theme }) => theme.shadows.authHeading};\n  text-align: start;\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.m}) {\n    font-size: 24px;\n  }\n`;\n","import styled from '@emotion/styled';\n\n// check main font size and line height and delete doubling\n// check using font family\n\nexport const StyledForm = styled.form`\n  position: relative;\n  box-sizing: border-box;\n  width: 100%;\n  min-height: 469px;\n  margin: auto 20px;\n  padding: 40px 20px;\n  display: flex;\n  flex-direction: column;\n  background-color: ${({ theme }) => theme.colors.white};\n  border-radius: 8px;\n  font-family: Inter, -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto',\n    'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.s}) {\n    width: 335px;\n  }\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.m}) {\n    width: 480px;\n    min-height: 521px;\n    padding: 40px;\n  }\n`;\n\nexport const StyledHeading = styled.h2`\n  color: ${({ theme }) => theme.colors.accent};\n  font-size: 18px;\n  line-height: 24px;\n  font-weight: 600;\n  text-shadow: ${({ theme }) => theme.shadows.authHeading};\n  text-align: start;\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.m}) {\n    font-size: 24px;\n  }\n`;\n\nexport const StyledErrorMessage = styled.div`\n  font-weight: 400;\n  font-size: 10px;\n  line-height: 14px;\n  color: #da1414;\n  display: flex;\n  flex-direction: column;\n`;\n","import styled from '@emotion/styled';\n// check main font size and line height and delete doubling\n\nexport const Wrapper = styled.div`\n  position: relative;\n`;\n\nexport const InputContainer = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledLabel = styled.label`\n  margin-top: 24px;\n  color: ${({ valid, theme }) => {\n    switch (valid) {\n      case true:\n        return theme.colors.saccess;\n      case false:\n        return theme.colors.failed;\n      default:\n        return theme.colors.textCancelBtnIntodo;\n    }\n  }};\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 15px;\n  text-align: start;\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.m}) {\n    margin-top: 18px;\n    font-size: 14px;\n    line-height: 17px;\n  }\n`;\n\nexport const StyledInput = styled.input`\n  width: 100%;\n  box-sizing: border-box;\n  height: 46px;\n  padding: 14px;\n  margin-top: 8px;\n  background-color: ${({ theme }) => theme.colors.white};\n  color: ${({ theme }) => theme.colors.textCancelBtnIntodo};\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 18px;\n  border: 1px solid;\n  border-color: ${({ valid, theme }) => {\n    switch (valid) {\n      case true:\n        return theme.colors.saccess;\n      case false:\n        return theme.colors.failed;\n      default:\n        return theme.colors.borderDefaultColor;\n    }\n  }};\n  border-radius: 8px;\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.placegolderAuth};\n  }\n  :focus {\n    border: 1px solid ${({ theme }) => theme.colors.textCancelBtnIntodo};\n  }\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.m}) {\n    height: 54px;\n    padding: 18px;\n    font-size: 16px;\n    line-height: 18px;\n  }\n`;\n\nexport const StyledIcon = styled.div`\n  width: 20px;\n  height: 20px;\n  margin-right: 12px;\n  position: absolute;\n  bottom: 13px;\n  right: 0;\n`;\n\nexport const StyledInputNotification = styled.p`\n  margin: 0;\n  padding: 0 18px;\n  font-size: 12px;\n  line-height: 14px;\n  color: ${({ valid, theme }) => {\n    switch (valid) {\n      case true:\n        return theme.colors.saccess;\n      case false:\n        return theme.colors.failed;\n      default:\n        return 'transparant';\n    }\n  }};\n`;\n\nexport const InputWrapper = styled.div`\n  position: relative;\n`;\n\nexport const PasswordBtn = styled.button`\n  position: absolute;\n  top: 60%;\n  right: 10px;\n  transform: translateY(-50%);\n`;\n","import {\n  Wrapper,\n  StyledInput,\n  StyledLabel,\n  StyledIcon,\n  InputContainer,\n  StyledInputNotification,\n  InputWrapper,\n  PasswordBtn,\n} from './AuthField.styled';\nimport { BiErrorCircle, BiCheckCircle } from 'react-icons/bi';\nimport PropTypes from 'prop-types';\nimport { useTheme } from '@emotion/react';\nimport { useEffect, useRef, useState } from 'react';\nimport { AiOutlineEye, AiOutlineEyeInvisible } from 'react-icons/ai';\n\nexport const AuthField = ({\n  valid,\n  onChange,\n  value,\n  name,\n  type,\n  placeholder,\n  errorMessage,\n  lableName,\n}) => {\n  const themeColors = useTheme().colors;\n\n  const passwordInputRef = useRef(null);\n  const [visible, setVisible] = useState(false);\n\n  const toggleBtn = () => {\n    setVisible(prevState => !prevState);\n  };\n\n  useEffect(() => {\n    if (passwordInputRef.current) {\n      passwordInputRef.current.type = visible ? 'text' : 'password';\n    }\n  }, [visible]);\n\n  return (\n    <Wrapper>\n      <InputContainer>\n        <StyledLabel htmlFor={name.toLowerCase()} valid={valid}>\n          {lableName}\n        </StyledLabel>\n        <InputWrapper>\n          <StyledInput\n            id={name.toLowerCase()}\n            name={name.toLowerCase()}\n            lableName={lableName}\n            type={type}\n            onChange={onChange}\n            value={value}\n            placeholder={placeholder}\n            valid={valid}\n            ref={type === 'password' ? passwordInputRef : null}\n          />\n          {type === 'password' && (\n            <PasswordBtn onClick={toggleBtn}>\n              {visible ? (\n                <AiOutlineEye size={17} />\n              ) : (\n                <AiOutlineEyeInvisible size={17} />\n              )}\n            </PasswordBtn>\n          )}\n        </InputWrapper>\n        {valid === false && (\n          <StyledIcon>\n            <BiErrorCircle color={themeColors.failed} size={20} />\n          </StyledIcon>\n        )}\n        {valid && (\n          <StyledIcon>\n            <BiCheckCircle color={themeColors.saccess} size={20} />\n          </StyledIcon>\n        )}\n      </InputContainer>\n      {valid === false && (\n        <StyledInputNotification valid={valid}>\n          {errorMessage}\n        </StyledInputNotification>\n      )}\n    </Wrapper>\n  );\n};\n\nAuthField.propTypes = {\n  valid: PropTypes.oneOf([true, false, null]),\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  lableName: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(['text', 'email', 'password']).isRequired,\n  placeholder: PropTypes.string.isRequired,\n  errorMessage: PropTypes.string,\n};\n","import { Formik, ErrorMessage } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport {\n  HeadingWrapper,\n  StyledForm,\n  StyledHeading,\n  StyledHomeBtn,\n} from './LoginForm.styled';\nimport { StyledErrorMessage } from '../RegisterForm/RegisterForm.styled';\nimport { AuthField } from '../AuthField/AuthField';\nimport { loginSchema } from 'helpers';\nimport { logIn } from '../../../redux/auth/operations';\nimport { notification, useNotification } from 'helpers';\nimport { MainBtn } from '../../../utils/Buttons/MainButton.styled';\nimport { CgLogIn } from 'react-icons/cg';\nimport { AiOutlineLeftCircle } from 'react-icons/ai';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const toast = useNotification();\n\n  const onSubmitForm = async (values, { resetForm }) => {\n    try {\n      const { payload } = await dispatch(logIn(values));\n      if (\n        payload === 'Request failed with status code 400' ||\n        payload === 'Request failed with status code 401'\n      ) {\n        notification(\n          toast,\n          'fail',\n          'Password or email is incorrect. Please check'\n        );\n        return;\n      } else if (payload === 'Request failed with status code 403') {\n        notification(\n          toast,\n          'fail',\n          'Email is not verified yet. Check email box for verification'\n        );\n        return;\n      } else if (payload === 'Request failed with status code 404') {\n        notification(toast, 'fail', 'User is not found. Please check email');\n        return;\n      }\n      resetForm();\n    } catch (err) {\n      console.log('Error===>', err);\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        email: '',\n        password: '',\n      }}\n      validationSchema={loginSchema}\n      validateOnBlur={false}\n      validateOnChange={false}\n      onSubmit={onSubmitForm}\n    >\n      {({ values, handleSubmit, handleBlur, handleChange }) => (\n        <StyledForm onSubmit={handleSubmit}>\n          <HeadingWrapper>\n            <StyledHeading>Log in</StyledHeading>\n            <StyledHomeBtn to=\"/\">\n              Home\n              <AiOutlineLeftCircle\n                style={{\n                  marginLeft: 6,\n                }}\n              />\n            </StyledHomeBtn>\n          </HeadingWrapper>\n\n          <AuthField\n            name={'Email'}\n            lableName={'Email'}\n            value={values.email}\n            type={'email'}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            placeholder=\"Enter email\"\n          />\n          <ErrorMessage component={StyledErrorMessage} name=\"email\" />\n\n          <AuthField\n            name={'Password'}\n            lableName={'Password'}\n            value={values.password}\n            type={'password'}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            placeholder=\"Enter password\"\n          />\n          <ErrorMessage component={StyledErrorMessage} name=\"password\" />\n\n          <MainBtn style={{ width: '100%', marginTop: '32px' }} type=\"submit\">\n            Log in\n            <CgLogIn style={{ marginLeft: 11, width: 18, height: 18 }} />\n          </MainBtn>\n        </StyledForm>\n      )}\n    </Formik>\n  );\n};\n","import { Formik, ErrorMessage } from 'formik';\nimport {\n  StyledErrorMessage,\n  StyledForm,\n  StyledHeading,\n} from './RegisterForm.styled';\nimport { AuthField } from '../AuthField/AuthField';\nimport { registerSchema } from 'helpers/authFieldValidation';\nimport { useDispatch } from 'react-redux';\nimport { register } from '../../../redux/auth/operations';\nimport { notification, useNotification } from 'helpers';\nimport { useNavigate } from 'react-router-dom';\nimport { MainBtn } from '../../../utils/Buttons/MainButton.styled';\nimport { CgLogIn } from 'react-icons/cg';\nimport { HeadingWrapper, StyledHomeBtn } from '../LoginForm/LoginForm.styled';\nimport { AiOutlineLeftCircle } from 'react-icons/ai';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const toast = useNotification();\n\n  const onSubmitForm = async (values, { resetForm }) => {\n    try {\n      const { payload } = await dispatch(register(values));\n      if (payload !== {} || typeof payload !== 'string') {\n        notification(\n          toast,\n          'info',\n          'Check your email and approve registration'\n        );\n        navigate('/login');\n        resetForm();\n      }\n      if (typeof payload === 'string') {\n        notification(\n          toast,\n          'fail',\n          'User with this email already exists. Please log in'\n        );\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        username: '',\n        email: '',\n        password: '',\n      }}\n      validationSchema={registerSchema}\n      validateOnBlur={false}\n      validateOnChange={false}\n      onSubmit={onSubmitForm}\n    >\n      {({ values, handleSubmit, handleBlur, handleChange }) => (\n        <StyledForm onSubmit={handleSubmit}>\n          <HeadingWrapper>\n            <StyledHeading>Sign up</StyledHeading>\n            <StyledHomeBtn to=\"/\">\n              Home\n              <AiOutlineLeftCircle\n                style={{\n                  marginLeft: 6,\n                }}\n              />\n            </StyledHomeBtn>\n          </HeadingWrapper>\n          <AuthField\n            name={'username'}\n            lableName={'Name'}\n            value={values.username}\n            type={'text'}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            placeholder=\"Enter your name\"\n          />\n          <ErrorMessage component={StyledErrorMessage} name=\"username\" />\n\n          <AuthField\n            name={'Email'}\n            lableName={'Email'}\n            value={values.email}\n            type={'email'}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            placeholder=\"Enter email\"\n          />\n          <ErrorMessage component={StyledErrorMessage} name=\"email\" />\n\n          <AuthField\n            name={'Password'}\n            lableName={'Password'}\n            value={values.password}\n            type={'password'}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            placeholder=\"Enter password\"\n          />\n          <ErrorMessage component={StyledErrorMessage} name=\"password\" />\n\n          <MainBtn style={{ width: '100%', marginTop: '32px' }} type=\"submit\">\n            Sign up\n            <CgLogIn style={{ marginLeft: 11, width: 18, height: 18 }} />\n          </MainBtn>\n        </StyledForm>\n      )}\n    </Formik>\n  );\n};\n","import styled from \"@emotion/styled\";\nimport { device } from '../styles/mediaVeriables';\nexport const Img = styled.img`\n  display: none;\n\n  @media ${device.desktop}{\n    display: block;\n    width: 368px;\n    height: 521px;\n    position: absolute;\n    right: 60px;\n    bottom: 19px;\n  }\n`;\n","import { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { useEffect } from 'react';\n\nimport { LoginForm } from 'components/Auth';\nimport { AuthGoogle } from 'components/Main';\nimport normalImage from 'images/others/desktop/rocket1x.png';\nimport retinaImage from 'images/others/desktop/rocket2x.png';\nimport superRetinaImage from 'images/others/desktop/rocket3x.png';\nimport { Img } from './LoginPage.styled';\nimport {\n  RegisterPageContainer,\n  RegisterPageWrap,\n  StyledNavLink,\n  NavWrap,\n} from './RegisterPage.styled';\nimport { selectIsLoggedInUser } from 'redux/auth/selectors';\n\nconst LoginPage = () => {\n  const isLoggedInUser = useSelector(selectIsLoggedInUser);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (isLoggedInUser) {\n      const currentDate = new Date();\n      const formattedDate = currentDate.toISOString().slice(0, 10);\n      navigate(`/calendar/month/${formattedDate}`);\n    }\n  }, [isLoggedInUser, navigate]);\n\n  return (\n    <RegisterPageContainer>\n      <Img\n        src={normalImage}\n        srcSet={`${normalImage} 1x, ${retinaImage} 2x, ${superRetinaImage} 3x`}\n        alt=\"Goose in rocket\"\n      />\n      <RegisterPageWrap>\n        <LoginForm />\n        <NavWrap>\n          <StyledNavLink to={'/register'}>Sign Up</StyledNavLink>\n          <AuthGoogle />\n        </NavWrap>\n      </RegisterPageWrap>\n    </RegisterPageContainer>\n  );\n};\n\nexport default LoginPage;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport { themes } from 'styles/themes';\nimport { device } from '../styles/mediaVeriables';\nexport const RegisterPageContainer = styled.div`\n  background-color: ${themes.colors.backgroundAuth};\n  height: 100vh;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const RegisterPageWrap = styled.div`\n  text-align: center;\n`;\nexport const StyledNavLink = styled(Link)`\n  display: block;\n  margin-top: ${themes.fontSizes.l};\n  color: ${themes.colors.accent};\n  font-weight: ${themes.fontWeight.sb};\n  font-size: ${themes.fontSizes.xs};\n  line-height: 1.17;\n  text-decoration-line: underline;\n  cursor: pointer;\n  text-shadow: 0px 47px 355px rgba(0, 0, 0, 0.07),\n    0px 9.4px 57.6875px rgba(0, 0, 0, 0.035);\n\n  @media ${device.tablet} {\n    font-size: 18px;\n    line-height: 1.33;\n    margin-top: ${themes.fontSizes.xxl};\n  }\n\n  :hover {\n    color: #2c66bc;\n  }\n`;\n\nexport const NavWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n  align-items: center;\n`;\n\nexport const Img = styled.img`\n  display: none;\n\n  @media ${device.desktop} {\n    display: block;\n    width: 400px;\n    height: 416px;\n    position: absolute;\n    left: 49px;\n    bottom: 0;\n  }\n`;\n"],"names":["StyledForm","styled","theme","colors","white","breakpoints","s","m","HeadingWrapper","StyledHomeBtn","Link","accent","shadows","authButton","hovered","StyledHeading","authHeading","StyledErrorMessage","Wrapper","InputContainer","StyledLabel","valid","saccess","failed","textCancelBtnIntodo","StyledInput","borderDefaultColor","placegolderAuth","StyledIcon","StyledInputNotification","InputWrapper","PasswordBtn","AuthField","onChange","value","name","type","placeholder","errorMessage","lableName","themeColors","useTheme","passwordInputRef","useRef","useState","visible","setVisible","useEffect","current","htmlFor","toLowerCase","id","ref","onClick","prevState","size","color","LoginForm","dispatch","useDispatch","toast","useNotification","onSubmitForm","values","resetForm","logIn","payload","notification","console","log","initialValues","email","password","validationSchema","loginSchema","validateOnBlur","validateOnChange","onSubmit","handleSubmit","handleBlur","handleChange","to","style","marginLeft","onBlur","component","width","marginTop","height","RegisterForm","navigate","useNavigate","register","username","registerSchema","Img","device","isLoggedInUser","useSelector","selectIsLoggedInUser","formattedDate","Date","toISOString","slice","src","normalImage","srcSet","retinaImage","superRetinaImage","alt","RegisterPageContainer","themes","RegisterPageWrap","StyledNavLink","NavWrap"],"sourceRoot":""}