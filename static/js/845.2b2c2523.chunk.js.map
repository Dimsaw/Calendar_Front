{"version":3,"file":"static/js/845.2b2c2523.chunk.js","mappings":"qNAGaA,EAAoBC,EAAAA,QAAAA,IAAH,+LAGR,qBAAGC,MAAkBC,OAAOC,UAA5B,GAEXC,EAAAA,EAAAA,OAIAA,EAAAA,EAAAA,SAKEC,EAA8BL,EAAAA,QAAAA,IAAH,wC,wFCmCxC,EA3CqB,WAAO,IAAD,IAGrBM,GAAc,IAAIC,MAAOC,cAAcC,MAAM,EAAG,IAChDC,EAA4B,aAC5BC,GAAkBC,EAAAA,EAAAA,MAAcC,SAChCC,EAAgBH,EAAgBI,QAAUL,EAA0BK,OAGpEC,EAAY,WAAGJ,EAAAA,EAAAA,MAAcC,SAASI,MAAM,KAAK,UAArC,QAA2C,QACvDC,EAAY,WAAGN,EAAAA,EAAAA,MAAcC,SAASI,MAAM,KAAK,UAArC,QAA2CX,EACvDa,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACJV,EAAgBI,OAASL,EAA0BK,SACrDI,GAASG,EAAAA,EAAAA,IAAgBN,IACzBG,GAASI,EAAAA,EAAAA,IAAeL,IAE3B,GAAE,CAACP,EAAgBI,OAAQG,EAAcC,EAAUH,IAGlD,IAAMQ,GAAOC,EAAAA,EAAAA,IAAYC,EAAAA,IACnBC,EAAeC,SAASJ,EAAKP,MAAM,KAAK,IAM9C,OALAI,EAAAA,EAAAA,YAAU,WACRQ,QAAQC,IAAI,mBACZX,GAASY,EAAAA,EAAAA,IAAgBJ,GAC1B,GAAE,CAACA,EAAcR,KAGhB,UAACpB,EAAD,YAEE,SAAC,EAAAiC,gBAAD,IAEClB,IAAgB,SAAC,KAAD,CAAUmB,GAAE,0BAAqB3B,MAElD,SAACD,EAAD,WACE,SAAC,KAAD,QAKP,C","sources":["pages/CalendarPage.styled.js","pages/CalendarPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { device } from 'styles/mediaVeriables';\n\nexport const CalendarContainer = styled.div`\n  width: 100%;\n  padding-inline: 20px;\n  background-color: ${({ theme }) => theme.colors.background};\n\n  @media ${device.tablet} {\n    padding-inline: 32px;\n  }\n\n  @media ${device.desktop} {\n    padding-inline: 16px;\n  }\n`;\n\nexport const ChoosedDayOrMonthsContainer = styled.div`\n  width: 100%;\n`;\n","import { Navigate, Outlet, useLocation } from 'react-router-dom';\nimport { CalendarContainer, ChoosedDayOrMonthsContainer } from './CalendarPage.styled';\nimport { CalendarToolbar } from 'components/User';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setCalendarType, setChoosedDate } from 'redux/tasks/slice';\nimport { selectChoosedDate } from 'redux/tasks/selectors';\nimport { fetchMonthTasks } from 'redux/tasks/operations';\n\nconst CalendarPage = () => {\n\n// logic if redirection is needed\nconst currentDate = new Date().toISOString().slice(0, 10);\nconst pathnameBeforeRedirection = \"/calendar/\";\nconst currentPathname = useLocation().pathname;\nconst willRedirect = (currentPathname.length <= pathnameBeforeRedirection.length);\n\n// taking path to store after reloading page with definite date\nconst typeFromPath = useLocation().pathname.split('/')[2] ?? 'month';\nconst dateFromPath = useLocation().pathname.split('/')[3] ?? currentDate;\nconst dispatch = useDispatch();\n\nuseEffect(()=>{\n  if (currentPathname.length > pathnameBeforeRedirection.length) {\n    dispatch(setCalendarType(typeFromPath))\n    dispatch(setChoosedDate(dateFromPath))\n  } \n}, [currentPathname.length, dateFromPath, dispatch, typeFromPath]);\n\n  // get tasks when month is changed\n  const date = useSelector(selectChoosedDate);\n  const choosedMonth = parseInt(date.split(\"-\")[1]);\n  useEffect(()=>{\n    console.log('get month tasks');\n    dispatch(fetchMonthTasks(choosedMonth))\n  }, [choosedMonth, dispatch])\n\n  return (\n    <CalendarContainer>\n\n      <CalendarToolbar />\n\n      {willRedirect && <Navigate to={`/calendar/month/${currentDate}`}/>}\n\n      <ChoosedDayOrMonthsContainer>\n        <Outlet />\n      </ChoosedDayOrMonthsContainer>\n      \n    </CalendarContainer>\n  );\n};\n\nexport default CalendarPage;\n"],"names":["CalendarContainer","styled","theme","colors","background","device","ChoosedDayOrMonthsContainer","currentDate","Date","toISOString","slice","pathnameBeforeRedirection","currentPathname","useLocation","pathname","willRedirect","length","typeFromPath","split","dateFromPath","dispatch","useDispatch","useEffect","setCalendarType","setChoosedDate","date","useSelector","selectChoosedDate","choosedMonth","parseInt","console","log","fetchMonthTasks","CalendarToolbar","to"],"sourceRoot":""}