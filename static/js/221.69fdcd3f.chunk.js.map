{"version":3,"file":"static/js/221.69fdcd3f.chunk.js","mappings":"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","sources":["components/Auth/LoginForm/LoginForm.styled.js","components/Auth/AuthField/AuthField.styled.js","components/Auth/AuthField/AuthField.jsx","helpers/patterns.js","helpers/authFieldValidation.js","components/Auth/LoginForm/LoginForm.jsx","components/Auth/RegisterForm/RegisterForm.styled.js","components/Auth/RegisterForm/RegisterForm.jsx","pages/RegisterPage.styled.js"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport { Link } from \"react-router-dom\";\n\n// check main font size and line height and delete doubling\n\nexport const StyledForm = styled.form`\n    position: relative;\n    box-sizing: border-box;\n    width: 100%;\n    min-height: 346px;\n    margin: auto 20px;\n    padding: 40px 20px;\n    display: flex;\n    flex-direction: column;\n    background-color: ${({theme}) => (theme.colors.white)};\n    border-radius: 8px;\n    font-family: Inter, -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n\n    @media screen and (min-width: ${({theme}) => (theme.breakpoints.s)}){\n        width: 335px;\n    }\n\n    @media screen and (min-width: ${({theme}) => (theme.breakpoints.m)}){\n        width: 480px;\n        min-height: 424px;\n        padding: 40px;\n    }\n`;\n\nexport const StyledHeading = styled.h2`\n    margin-bottom: 8px;\n    color: ${({theme}) => (theme.colors.accent)};\n    font-size: 18px;\n    line-height: 24px;\n    font-weight: 600;\n    text-shadow: ${({theme}) => (theme.shadows.authHeading)};\n\n    @media screen and (min-width: ${({theme}) => (theme.breakpoints.m)}) {\n        margin-bottom: 22px;\n        font-size: 24px;  \n    }\n`;\n\nexport const StyledIcon = styled.div`\n    margin-left: 14px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n`;\n\nexport const StyledButton = styled.button`\n    height: 46px;\n    margin-top: 32px;\n    background-color: ${({theme}) => (theme.colors.accent)};\n    color: ${({theme}) => (theme.colors.white)};\n    font-weight: 600;\n    font-family: inherit;\n    font-size: 14px;\n    line-height: 18px;\n    letter-spacing: -0.02em;\n    box-shadow: ${({theme}) => (theme.shadows.authButton)};\n    border-radius: 16px;\n    border-width: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer; \n    \n    :hover {\n        background-color: ${({theme}) => (theme.colors.hovered)};\n    }\n\n    @media screen and (min-width: ${({theme}) => (theme.breakpoints.m)}) {\n        height: 56px;\n        margin-top: 48px;\n        font-size: 18px;\n        line-height: 24px;\n    }\n`;\n\nexport const StyledLink = styled(Link)`\n    position: absolute;\n    bottom: -32px;\n    right: 0;\n    width: 100%;\n    font-weight: 600;\n    font-size: 12px;\n    line-height: 14px;\n    color: ${({theme}) => (theme.colors.accent)};\n    text-align: center;\n    @media screen and (min-width: ${({theme}) => (theme.breakpoints.m)}) {\n        font-size: 18px;\n        line-height: 24px;\n    }\n`;","import styled from \"@emotion/styled\";\n\n// add import of 3 breakpoints\n// add import of colors\n// check main font size and line height and delete doubling\n// check using font family\n\nexport const InputContainer = styled.div`\n    position: relative;\n    display: flex;\n    flex-direction: column;\n`;\n\nexport const StyledLabel = styled.label`\n    margin-top: 24px;\n    color: ${({valid, theme}) => {\n        switch (valid) {\n            case true:\n                return theme.colors.saccess;\n            case false:\n                return theme.colors.failed;\n            default:\n                return theme.colors.borderInputActive\n        }           \n    }};\n    font-weight: 600;\n    font-size: 12px;\n    line-height: 15px;\n    @media screen and (min-width: ${({theme}) => (theme.breakpoints.m)}) {\n        margin-top: 18px;\n        font-size: 14px;\n        line-height: 17px; \n    }\n`;\n\nexport const StyledInput = styled.input`\n    box-sizing: border-box;\n    height: 46px;\n    padding: 14px;\n    margin-top: 8px;\n    background-color: ${({theme}) => (theme.colors.white)};\n    color: ${({theme}) => (theme.colors.borderInputActive)};\n    font-weight: 400;\n    font-size: 14px;\n    line-height: 18px;\n    border: 1px solid;\n    border-color: ${({valid, theme}) => {\n        switch (valid) {\n            case true:\n                return theme.colors.saccess;\n            case false:\n                return theme.colors.failed;\n            default:\n                return theme.colors.borderInput;\n        }           \n    }};\n    border-radius: 8px;\n\n    ::placeholder {\n        color: ${({theme}) => (theme.colors.placegolderAuth)}    \n    }\n    :focus {\n        border: 1px solid ${({theme}) => (theme.colors.borderInputActive)};\n    }\n\n    @media screen and (min-width: ${({theme}) => (theme.breakpoints.m)}) {\n        height: 54px;\n        padding: 18px;\n        font-size: 16px;\n        line-height: 18px;\n    }\n`;\n\nexport const StyledIcon = styled.div`\n    width: 20px;\n    height: 20px;\n    margin-right: 12px;\n    position: absolute;\n    bottom: 13px;\n    right: 0;\n\n`;\n\nexport const StyledInputNotification = styled.p`\n    position: absolute;\n    bottom: -22px;\n    margin: 0 18px;\n    position: absolute;\n    font-size: 12px;\n    line-height: 14px;\n    color: ${({valid, theme}) => {\n        switch (valid) {\n            case true:\n                return theme.colors.saccess;\n            case false:\n                return theme.colors.failed;\n            default:\n                return 'transparant';\n        }           \n    }};\n`;","import { StyledInput, StyledLabel, StyledIcon, InputContainer, StyledInputNotification } from './AuthField.styled';\nimport { BiErrorCircle, BiCheckCircle } from \"react-icons/bi\";\nimport PropTypes from 'prop-types';\nimport { useTheme } from '@emotion/react';\n\nexport const AuthField = ({valid, onChange, value, name, type, placeholder}) => {\n    const themeColors = useTheme().colors;\n    \n\n    return (\n        <InputContainer>\n            <StyledLabel htmlFor={name.toLowerCase()} valid={valid}>{name}</StyledLabel>\n            <StyledInput\n                id={name.toLowerCase()}\n                name={name.toLowerCase()}\n                type={type}\n                onChange={onChange}\n                value={value}\n                placeholder={placeholder}\n                valid={valid}\n            />\n            {valid === false && <StyledIcon><BiErrorCircle color={themeColors.failed} size={20}/></StyledIcon>}\n            {valid && <StyledIcon><BiCheckCircle color={themeColors.saccess} size={20}/></StyledIcon>}\n            {valid !== null && <StyledInputNotification valid={valid}>This is  {valid ? ('a CORRECT') : ('an ERROR')} {name.toLowerCase()}</StyledInputNotification>}\n        </InputContainer>\n    )\n};\n\nAuthField.propTypes = {\n    valid: PropTypes.oneOf([true, false, null]),\n    onChange: PropTypes.func.isRequired, \n    value: PropTypes.string.isRequired, \n    name: PropTypes.string.isRequired, \n    type: PropTypes.oneOf(['text', 'email']).isRequired, \n    placeholder: PropTypes.string.isRequired\n};\n","const namePattern = /^[\\p{L}\\s]+$/u; // only Latin or Cyrillic characters\nconst emailPattern = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\nconst passwordPattern = /^.*(?=.{6,})((?=.*[a-z]){1})((?=.*[A-Z]){1}).*$/; // 6 characters, at lest one upperCase and one lowercase\nconst urlPattern =\n  /^https?:\\/\\/[\\w-]+(\\.[\\w-]+)+([\\w.,@?^=%&:/~+#-]*[\\w@?^=%&/~+#-])?$/;\nconst phonePattern = /^38 \\(\\d{3}\\) \\d{3} \\d{2} \\d{2}$/;\n\nexport const patterns = {\n  namePattern,\n  emailPattern,\n  passwordPattern,\n  urlPattern,\n  phonePattern,\n};\n","import * as yup from 'yup';\n\nimport { patterns } from 'helpers/patterns';\n\n// const nameRegex = /^[\\p{L}\\s]+$/u;\n// const emailRegex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n// const passwordRegex = /^.*(?=.{6,})((?=.*[a-z]){1})((?=.*[A-Z]){1}).*$/;\n\nconst nameSchema = yup\n  .string()\n  .min(1, 'min 1')\n  .max(15)\n  .required()\n  .matches(patterns.namePattern);\n\nconst emailSchema = yup\n  .string()\n  .email()\n  .matches(patterns.emailPattern)\n  .required();\n\nconst passwordSchema = yup\n  .string()\n  .required()\n  .min(6)\n  .max(16)\n  .matches(patterns.passwordPattern);\n\nconst validateField = async (value, schema) => {\n  let isValid;\n  let firstError;\n  await schema\n    .validate(value)\n    .then(() => (isValid = true))\n    .catch(error => {\n      isValid = false;\n      firstError = error.message;\n    });\n  return { valid: isValid, error: firstError };\n};\n\nexport const validateRegisterForm = async ({ name, email, password }) => {\n  const nameValidation = await validateField(name, nameSchema);\n  const emailValidation = await validateField(email, emailSchema);\n  const passwordValidation = await validateField(password, passwordSchema);\n  return {\n    name: nameValidation,\n    email: emailValidation,\n    password: passwordValidation,\n  };\n};\n\nexport const validateLoginForm = async ({ email, password }) => {\n  const emailValidation = await validateField(email, emailSchema);\n  const passwordValidation = await validateField(password, passwordSchema);\n  return { email: emailValidation, password: passwordValidation };\n};\n","import { useFormik } from 'formik';\nimport { StyledButton, StyledForm, StyledHeading, StyledIcon } from './LoginForm.styled';\nimport { useState } from 'react';\nimport { AuthField } from '../AuthField/AuthField';\nimport { validateLoginForm } from 'helpers';\nimport { FiLogIn } from 'react-icons/fi';\n\nexport const LoginForm = () => {\n    const [emailValid, setEmailValid] = useState(null);\n    const [passwordValid, setPasswordValid] = useState(null);\n\n    const onSubmitForm = async (values) => {\n        // validation of inputs\n        const validationResponse = await validateLoginForm(values);\n        setEmailValid(validationResponse.email.valid);\n        setPasswordValid(validationResponse.password.valid);\n\n        // set loader true\n\n        // API registration\n\n        // set loader false\n\n        // notificate API response\n\n        // redirect /calendar/month\n    };\n\n    const formik = useFormik({\n        initialValues: {\n        password: '',\n        email: '',\n        },\n        onSubmit: values => {\n        onSubmitForm(values)\n        }\n    });\n    return (\n        <StyledForm onSubmit={formik.handleSubmit}>\n            <StyledHeading>Log in</StyledHeading>\n\n            <AuthField \n                name={'Email'}\n                value={formik.values.email}\n                type={'email'}\n                onChange={formik.handleChange}\n                valid={emailValid}\n                placeholder='Enter email'\n            />\n\n            <AuthField \n                name={'Password'}\n                value={formik.values.password}\n                type={'text'}\n                onChange={formik.handleChange}\n                valid={passwordValid}\n                placeholder='Enter password'\n            />\n\n            <StyledButton type=\"submit\">\n                Log in\n                <StyledIcon><FiLogIn size={17} color='#FFFFFF'/></StyledIcon>\n            </StyledButton>\n        </StyledForm>\n    )\n};\n","import styled from \"@emotion/styled\";\nimport { Link } from \"react-router-dom\";\n\n// check main font size and line height and delete doubling\n// check using font family\n\nexport const StyledForm = styled.form`\n    position: relative;\n    box-sizing: border-box;\n    width: 100%;\n    min-height: 469px;\n    margin: auto 20px;\n    padding: 40px 20px;\n    display: flex;\n    flex-direction: column;\n    background-color: ${({theme}) => (theme.colors.white)};\n    border-radius: 8px;\n    font-family: Inter, -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n\n    @media screen and (min-width: ${({theme}) => (theme.breakpoints.s)}){\n        width: 335px;\n    }\n\n    @media screen and (min-width: ${({theme}) => (theme.breakpoints.m)}){\n        width: 480px;\n        min-height: 521px;\n        padding: 40px;\n    }\n`;\n\nexport const StyledHeading = styled.h2`\n    margin-bottom: 8px;\n    color: ${({theme}) => (theme.colors.accent)};\n    font-size: 18px;\n    line-height: 24px;\n    font-weight: 600;\n    text-shadow: ${({theme}) => (theme.shadows.authHeading)};\n\n    @media screen and (min-width: ${({theme}) => (theme.breakpoints.m)}) {\n        margin-bottom: 22px;\n        font-size: 24px;  \n    }\n`;\n\nexport const StyledIcon = styled.div`\n    margin-left: 14px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n`;\n\nexport const StyledButton = styled.button`\n    height: 46px;\n    margin-top: 32px;\n    background-color: ${({theme}) => (theme.colors.accent)};\n    color: ${({theme}) => (theme.colors.white)};\n    font-weight: 600;\n    font-size: 14px;\n    font-family: inherit;\n    line-height: 18px;\n    letter-spacing: -0.02em;\n    box-shadow: ${({theme}) => (theme.shadows.authButton)};\n    border-radius: 16px;\n    border-width: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer; \n    \n    :hover {\n        background-color: ${({theme}) => (theme.colors.hovered)};\n    }\n\n    @media screen and (min-width: ${({theme}) => (theme.breakpoints.m)}) {\n        height: 56px;\n        margin-top: 48px;\n        font-size: 18px;\n        line-height: 24px;\n    }\n`;\n\nexport const StyledLink = styled(Link)`\n    position: absolute;\n    bottom: -32px;\n    right: 0;\n    width: 100%;\n    font-weight: 600;\n    font-size: 12px;\n    line-height: 14px;\n    color: ${({theme}) => (theme.colors.accent)};\n    text-align: center;\n    @media screen and (min-width: ${({theme}) => (theme.breakpoints.m)}) {\n        font-size: 18px;\n        line-height: 24px;\n    }\n`;","import { useFormik } from 'formik';\nimport { StyledButton, StyledForm, StyledHeading, StyledIcon } from './RegisterForm.styled';\nimport { useState } from 'react';\nimport { AuthField } from '../AuthField/AuthField';\nimport { validateRegisterForm } from 'helpers/authFieldValidation';\nimport { FiLogIn } from 'react-icons/fi';\n\nexport const RegisterForm = () => {\n\n    const [emailValid, setEmailValid] = useState(null);\n    const [passwordValid, setPasswordValid] = useState(null);\n    const [nameValid, setNameValid] = useState(null);\n\n    const onSubmitForm = async (values) => {\n        // validation of inputs\n        const validationResponse = await validateRegisterForm(values);\n        setEmailValid(validationResponse.email.valid);\n        setPasswordValid(validationResponse.password.valid);\n        setNameValid(validationResponse.name.valid);\n\n        // set loader true\n\n        // API registration\n\n        // set loader false\n\n        // notificate API response\n\n        // redirect /calendar/month\n    };\n\n    const formik = useFormik({\n        initialValues: {\n        name: '',\n        password: '',\n        email: '',\n        },\n        onSubmit: values => {\n        onSubmitForm(values)\n        }\n    });\n\n    return (\n        <StyledForm onSubmit={formik.handleSubmit}>\n            <StyledHeading>Sign up</StyledHeading>\n\n\n            <AuthField \n                name={'Name'}\n                value={formik.values.name}\n                type={'text'}\n                onChange={formik.handleChange}\n                valid={nameValid}\n                placeholder='Enter your name'\n            />\n\n            <AuthField \n                name={'Email'}\n                value={formik.values.email}\n                type={'email'}\n                onChange={formik.handleChange}\n                valid={emailValid}\n                placeholder='Enter email'\n            />\n\n            <AuthField \n                name={'Password'}\n                value={formik.values.password}\n                type={'text'}\n                onChange={formik.handleChange}\n                valid={passwordValid}\n                placeholder='Enter password'\n            />\n\n            <StyledButton type=\"submit\">\n                Sign up\n                <StyledIcon><FiLogIn size={17} color='#FFFFFF'/></StyledIcon>\n            </StyledButton>\n            \n        </StyledForm>\n    )\n}","import styled from \"@emotion/styled\";\nimport { Link } from 'react-router-dom';\nimport { themes } from 'styles/themes';\nexport const RegisterPageContainer = styled.div`\n  background-color: ${themes.colors.backgroundAuth};\n  height: 100vh;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const RegisterPageWrap = styled.div`\ntext-align: center;\n\n`;\nexport const StyledNavLink = styled(Link)`\n  display: block;\n  margin-top: ${themes.fontSizes.l}px;\n  color:${themes.colors.accent};\n  font-weight: ${themes.fontWeight.sb};\n  font-size: ${themes.fontSizes.xs}px;\n  line-height: 1.17;\n  text-decoration-line: underline;\n  cursor: pointer;\n  text-shadow: 0px 47px 355px rgba(0, 0, 0, 0.07), 0px 9.4px 57.6875px rgba(0, 0, 0, 0.035);\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n    line-height: 1.33;\n    margin-top: ${themes.fontSizes.xxl}px;\n  }\n\n  :hover {\n    color: #2c66bc;\n  }\n`;\n\nexport const Img = styled.img`\n  display: none;\n\n  @media screen and (min-width: 1440px) {\n    display: block;\n    width: 400px;\n    height: 416px;\n    position: absolute;\n    left: 49px;\n    bottom: 0;\n  }\n`;\n\n\n"],"names":["StyledForm","styled","theme","colors","white","breakpoints","s","m","StyledHeading","accent","shadows","authHeading","StyledIcon","StyledButton","authButton","hovered","Link","InputContainer","StyledLabel","valid","saccess","failed","borderInputActive","StyledInput","borderInput","placegolderAuth","StyledInputNotification","AuthField","onChange","value","name","type","placeholder","themeColors","useTheme","htmlFor","toLowerCase","id","color","size","patterns","nameSchema","yup","min","max","required","matches","emailSchema","email","passwordSchema","validateField","schema","validate","then","isValid","catch","error","firstError","message","validateRegisterForm","password","nameValidation","emailValidation","passwordValidation","validateLoginForm","LoginForm","useState","emailValid","setEmailValid","passwordValid","setPasswordValid","onSubmitForm","values","validationResponse","formik","useFormik","initialValues","onSubmit","handleSubmit","handleChange","RegisterForm","nameValid","setNameValid","RegisterPageContainer","themes","RegisterPageWrap","StyledNavLink","Img"],"sourceRoot":""}