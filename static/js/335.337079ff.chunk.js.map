{"version":3,"file":"static/js/335.337079ff.chunk.js","mappings":"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","sources":["components/User/MainLayout/CalendarTable/CalendarTable.jsx","components/User/MainLayout/CalendarToolbar/CalendarToolbar.jsx","components/User/MainLayout/ChoosedDay/ChoosedDay.jsx","components/User/MainLayout/ChoosedMonth/ChoosedMonth.jsx","components/User/MainLayout/DayCalendarHead/DayCalendarHead.jsx","components/User/MainLayout/MonthCalendarHead/MonthCalendarHead.jsx","components/User/MainLayout/PeriodPaginator/PeriodPaginator.jsx","components/User/MainLayout/PeriodTypeSelect/PeriodTypeSelect.jsx","components/User/MainLayout/TaskColumnCard/TaskColumnCard.jsx","components/User/MainLayout/TasksColumn/TasksColumn.jsx","components/User/MainLayout/TasksColumnsList/TaskColumnsList.jsx","components/User/MainLayout/TaskToolbar/TaskToolbar.jsx","components/User/MainLayout/UserForm/UserForm.jsx","components/User/MainLayout/index.js","components/User/MainLayout/MainLayout.jsx","components/User/SideBar/SideBar.jsx","components/User/Header/Header.jsx","components/User/Header/AddFeedbackModal/AddFeedbackModal.jsx","components/User/Header/ThemeToggler/ThemeToggler.jsx","styles/mediaVeriables.js","components/User/Header/UserInfo/UserInfo.styled.js","components/User/Header/UserInfo/UserInfo.jsx","pages/CalendarPage.jsx","redux/auth/selectors.js"],"sourcesContent":["export const CalendarTable = () => {\n  return (\n    <div>\n      <h3>Calendar Table</h3>\n    </div>\n  );\n};\n","export const CalendarToolbar = () => {\n  return (\n    <div>\n      <h3> Calendar Toolbar</h3>\n    </div>\n  );\n};\n","export const ChoosedDay = () => {\n  return (\n    <div>\n      <h3>Choosed Day</h3>\n    </div>\n  );\n};\n","export const ChoosedMonth = () => {\n  return (\n    <div>\n      <h3>Choosed Month</h3>\n    </div>\n  );\n};\n","export const DayCalendarHead = () => {\n  return (\n    <div>\n      <h3>Day Calendar Head</h3>\n    </div>\n  );\n};\n","export const MonthCalendarHead = () => {\n  return (\n    <div>\n      <h3>Month Calendar Head</h3>\n    </div>\n  );\n};\n","export const PeriodPaginator = () => {\n  return (\n    <div>\n      <h3>Period Paginator</h3>\n    </div>\n  );\n};\n","export const PeriodTypeSelect = () => {\n  return (\n    <div>\n      <h3>Period Type Select</h3>\n    </div>\n  );\n};\n","export const TaskColumnCard = () => {\n  return (\n    <div>\n      <h3>Task Column Card</h3>\n    </div>\n  );\n};\n","export const TasksColumn = () => {\n  return (\n    <div>\n      <h3>Tasks Column </h3>\n    </div>\n  );\n};\n","export const TasksColumnsList = () => {\n  return (\n    <div>\n      <h3>Tasks Columns List </h3>\n    </div>\n  );\n};\n","export const TaskToolbar = () => {\n  return (\n    <div>\n      <h3>Task Toolbar</h3>\n    </div>\n  );\n};\n","export const UserForm = () => {\n  return (\n    <div>\n      <h3>User Form </h3>\n    </div>\n  );\n};\n","import { MainLayout } from './MainLayout';\nimport { CalendarTable } from './CalendarTable';\nimport { CalendarToolbar } from './CalendarToolbar';\nimport { ChoosedDay } from './ChoosedDay';\nimport { ChoosedMonth } from './ChoosedMonth';\nimport { DayCalendarHead } from './DayCalendarHead';\nimport { MonthCalendarHead } from './MonthCalendarHead';\nimport { PeriodPaginator } from './PeriodPaginator';\nimport { PeriodTypeSelect } from './PeriodTypeSelect';\nimport { TaskColumnCard } from './TaskColumnCard';\nimport { TasksColumn } from './TasksColumn';\nimport { TasksColumnsList } from './TasksColumnsList';\nimport { TaskToolbar } from './TaskToolbar';\nimport { UserForm } from './UserForm';\n\nexport {\n  // MainLayout,\n  CalendarTable,\n  CalendarToolbar,\n  ChoosedDay,\n  ChoosedMonth,\n  DayCalendarHead,\n  MonthCalendarHead,\n  PeriodPaginator,\n  PeriodTypeSelect,\n  TaskColumnCard,\n  TasksColumn,\n  TasksColumnsList,\n  TaskToolbar,\n  UserForm,\n};\n\nexport default MainLayout;\n","import { Header } from '../../User';\nimport { SideBar } from '../SideBar';\n\nexport const MainLayout = () => {\n  return (\n    <div>\n      <h3>MainLayout</h3>\n      <Header />\n      <SideBar />\n    </div>\n  );\n};\n","import { AuthNav } from 'components/Main';\n\nexport const SideBar = () => {\n  return (\n    <div>\n      <h3>Side Bar </h3>\n      <AuthNav />\n    </div>\n  );\n};\n","import { UserInfo, ThemeToggler, AddFeedbackModal } from '../Header';\n\nexport const Header = () => {\n  return (\n    <div>\n      <h3>Header</h3>\n      <UserInfo />\n      <ThemeToggler />\n      <AddFeedbackModal />\n    </div>\n  );\n};\n","export const AddFeedbackModal = () => {\n  return (\n    <div>\n      <h3>Add Feedback Modal</h3>\n    </div>\n  );\n};\n","export const ThemeToggler = () => {\n  return (\n    <div>\n      <h3>Theme Toggler</h3>\n    </div>\n  );\n};\n","const size = {\n  mobile: 375,\n  tablet: 768,\n  desktop: 1440,\n};\n\nexport const device = {\n  mobileOnly: `(max-width: ${size.mobile - 0.02}px)`,\n  mobile: `(min-width: ${size.mobile}px)`,\n  mobileTablet: `(min-width: ${size.mobile}px) and (max-width: ${\n    size.tablet - 0.02\n  }px)`,\n  tabletBefore: `(max-width: ${size.tablet - 0.02}px)`,\n  tablet: `(min-width: ${size.tablet}px)`,\n  tabletOnly: `(min-width: ${size.tablet}px) and (max-width: ${\n    size.desktop - 0.02\n  }px)`,\n  desktopBefore: `(max-width: ${size.desktop - 0.02}px)`,\n  desktop: `(min-width: ${size.desktop}px)`,\n  retina: `(min-device-pixel-ratio: 2),\n  (-webkit-min-device-pixel-ratio: 2),\n  (min-resolution: 192dpi),\n  (min-resolution: 2dppx)`,\n};\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\nimport { themes } from 'styles/themes';\nimport { device } from 'styles/mediaVeriables';\n\nexport const StyledName = styled.p`\n  margin-right: 14px;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 1.28;\n  color: ${themes.colors.black};\n  @media ${device.tablet} {\n    font-size: 18px;\n  }\n`;\n\nexport const StyledAvatarContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n  border: 1.8px solid ${themes.colors.accent};\n  @media ${device.tablet} {\n    width: 44px;\n    height: 44px;\n  }\n`;\n\nexport const StyledLetter = styled.span`\n  display: flex;\n  align-items: center;\n  font-weight: 700;\n  font-size: 26px;\n  color: ${themes.colors.accent};\n  @media ${device.tablet} {\n    font-size: 32px;\n  }\n`;\n\nexport const StyledAvatar = styled.img`\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n`;\n\nexport const StyledLink = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n`;\n","import { selectIsIsLoadingUser, selectUser } from 'redux/auth/selectors';\nimport {\n  StyledLink,\n  StyledName,\n  StyledAvatarContainer,\n  StyledLetter,\n  StyledAvatar,\n} from './UserInfo.styled';\nimport { useSelector } from 'react-redux';\n\nexport const UserInfo = () => {\n  const {\n    user: { name },\n    userPhoto,\n  } = useSelector(selectUser);\n  const isLoading = useSelector(selectIsIsLoadingUser);\n\n  const firstLetter = name.trim().slice(0, 1).toUpperCase();\n\n  return (\n    <StyledLink to=\"/main/account\">\n      <StyledName>{name}</StyledName>\n      <StyledAvatarContainer>\n        {isLoading ? (\n          <StyledLetter>{firstLetter}</StyledLetter>\n        ) : !userPhoto ? (\n          <StyledLetter>{firstLetter}</StyledLetter>\n        ) : (\n          <StyledAvatar src={userPhoto} alt=\"Avatar\" />\n        )}\n      </StyledAvatarContainer>\n    </StyledLink>\n  );\n};\n","import { TasksColumn, TasksColumnsList } from 'components/User';\n\nconst CalendarPage = () => {\n  return (\n    <div>\n      <h3>CalendarPage</h3>\n      <TasksColumn />\n      <TasksColumnsList />\n    </div>\n  );\n};\n\nexport default CalendarPage;\n","export const selectIsLoggedInUser = state => state?.auth?.isLoggedIn;\nexport const selectUser = state => state?.auth?.user;\nexport const selectIsRefreshingUser = state => state?.auth?.isRefreshing;\nexport const selectIsIsLoadingUser = state => state?.auth?.isLoading;\n"],"names":["CalendarTable","CalendarToolbar","ChoosedDay","ChoosedMonth","DayCalendarHead","MonthCalendarHead","PeriodPaginator","PeriodTypeSelect","TaskColumnCard","TasksColumn","TasksColumnsList","TaskToolbar","UserForm","SideBar","Header","UserInfo","ThemeToggler","AddFeedbackModal","size","device","mobileOnly","mobile","mobileTablet","tabletBefore","tablet","tabletOnly","desktopBefore","desktop","retina","StyledName","styled","themes","StyledAvatarContainer","StyledLetter","StyledAvatar","StyledLink","NavLink","useSelector","selectUser","name","user","userPhoto","isLoading","selectIsIsLoadingUser","firstLetter","trim","slice","toUpperCase","to","src","alt","state","auth"],"sourceRoot":""}